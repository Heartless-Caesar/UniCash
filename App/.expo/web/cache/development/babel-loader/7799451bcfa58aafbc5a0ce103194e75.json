{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = {\n  button: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  animated: {\n    borderWidth: 0,\n    position: 'absolute'\n  }\n};\nvar SwitchSelector = function (_Component) {\n  _inherits(SwitchSelector, _Component);\n  var _super = _createSuper(SwitchSelector);\n  function SwitchSelector(props) {\n    var _this;\n    _classCallCheck(this, SwitchSelector);\n    _this = _super.call(this, props);\n    _this.responderEnd = function (evt, gestureState) {\n      var _this$props = _this.props,\n        disabled = _this$props.disabled,\n        options = _this$props.options;\n      var selected = _this.state.selected;\n      if (disabled) return;\n      var swipeDirection = _this.getSwipeDirection(gestureState);\n      if (swipeDirection === 'RIGHT' && selected < options.length - 1) {\n        _this.toggleItem(selected + 1);\n      } else if (swipeDirection === 'LEFT' && selected > 0) {\n        _this.toggleItem(selected - 1);\n      }\n    };\n    _this.shouldSetResponder = function (evt, gestureState) {\n      return evt.nativeEvent.touches.length === 1 && !(Math.abs(gestureState.dx) < 5 && Math.abs(gestureState.dy) < 5);\n    };\n    _this.animate = function (value, last) {\n      var animationDuration = _this.props.animationDuration;\n      _this.animatedValue.setValue(last);\n      Animated.timing(_this.animatedValue, {\n        toValue: value,\n        duration: animationDuration,\n        easing: Easing.cubic,\n        useNativeDriver: true\n      }).start();\n    };\n    _this.toggleItem = function (index) {\n      var callOnPress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var selected = _this.state.selected;\n      var _this$props2 = _this.props,\n        options = _this$props2.options,\n        returnObject = _this$props2.returnObject,\n        onPress = _this$props2.onPress;\n      if (options.length <= 1 || index === null || isNaN(index)) return;\n      _this.animate(I18nManager.isRTL ? -(index / options.length) : index / options.length, I18nManager.isRTL ? -(selected / options.length) : selected / options.length);\n      if (callOnPress && onPress) {\n        onPress(returnObject ? options[index] : options[index].value);\n      } else {\n        console.log('Call onPress with value: ', options[index].value);\n      }\n      _this.setState({\n        selected: index\n      });\n    };\n    var initial = props.initial,\n      _options = props.options;\n    _this.state = {\n      selected: initial\n    };\n    _this.panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: _this.shouldSetResponder,\n      onMoveShouldSetPanResponder: _this.shouldSetResponder,\n      onPanResponderRelease: _this.responderEnd,\n      onPanResponderTerminate: _this.responderEnd\n    });\n    _this.animatedValue = new Animated.Value(initial ? I18nManager.isRTL ? -(initial / _options.length) : initial / _options.length : 0);\n    return _this;\n  }\n  _createClass(SwitchSelector, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props3 = this.props,\n        value = _this$props3.value,\n        disableValueChangeOnPress = _this$props3.disableValueChangeOnPress;\n      if (prevProps.value !== value) {\n        this.toggleItem(value, !disableValueChangeOnPress);\n      }\n    }\n  }, {\n    key: \"getSwipeDirection\",\n    value: function getSwipeDirection(gestureState) {\n      var dx = gestureState.dx,\n        dy = gestureState.dy,\n        vx = gestureState.vx;\n      if (Math.abs(vx) > 0.1 && Math.abs(dy) < 80) {\n        return dx > 0 ? 'RIGHT' : 'LEFT';\n      }\n      return null;\n    }\n  }, {\n    key: \"getBgColor\",\n    value: function getBgColor() {\n      var selected = this.state.selected;\n      var _this$props4 = this.props,\n        options = _this$props4.options,\n        buttonColor = _this$props4.buttonColor;\n      if (selected === -1) {\n        return 'transparent';\n      }\n      return options[selected].activeColor || buttonColor;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props5 = this.props,\n        style = _this$props5.style,\n        textStyle = _this$props5.textStyle,\n        selectedTextStyle = _this$props5.selectedTextStyle,\n        textContainerStyle = _this$props5.textContainerStyle,\n        selectedTextContainerStyle = _this$props5.selectedTextContainerStyle,\n        imageStyle = _this$props5.imageStyle,\n        textColor = _this$props5.textColor,\n        selectedColor = _this$props5.selectedColor,\n        fontSize = _this$props5.fontSize,\n        backgroundColor = _this$props5.backgroundColor,\n        borderColor = _this$props5.borderColor,\n        borderRadius = _this$props5.borderRadius,\n        borderWidth = _this$props5.borderWidth,\n        hasPadding = _this$props5.hasPadding,\n        valuePadding = _this$props5.valuePadding,\n        height = _this$props5.height,\n        bold = _this$props5.bold,\n        disabled = _this$props5.disabled,\n        buttonMargin = _this$props5.buttonMargin,\n        options = _this$props5.options,\n        accessibilityLabel = _this$props5.accessibilityLabel,\n        testID = _this$props5.testID;\n      var _this$state = this.state,\n        selected = _this$state.selected,\n        sliderWidth = _this$state.sliderWidth;\n      var optionsMap = options.map(function (element, index) {\n        var isSelected = selected === index;\n        return _jsxs(TouchableOpacity, {\n          disabled: disabled || element.disabled,\n          style: [styles.button, isSelected ? selectedTextContainerStyle : textContainerStyle],\n          onPress: function onPress() {\n            return _this2.toggleItem(index);\n          },\n          accessibilityLabel: element.accessibilityLabel,\n          testID: element.testID,\n          children: [typeof element.customIcon === 'function' ? element.customIcon(isSelected) : element.customIcon, element.imageIcon && _jsx(Image, {\n            source: element.imageIcon,\n            style: [{\n              height: 30,\n              width: 30,\n              tintColor: isSelected ? selectedColor : textColor\n            }, imageStyle]\n          }), _jsx(Text, {\n            style: [{\n              fontSize: fontSize,\n              fontWeight: bold ? 'bold' : 'normal',\n              textAlign: 'center',\n              color: isSelected ? selectedColor : textColor,\n              backgroundColor: 'transparent'\n            }, isSelected ? selectedTextStyle : textStyle],\n            children: element.label\n          })]\n        }, index);\n      });\n      return _jsx(View, {\n        style: [{\n          flexDirection: 'row'\n        }, style],\n        accessibilityLabel: accessibilityLabel,\n        testID: testID,\n        children: _jsx(View, _objectSpread(_objectSpread({}, this.panResponder.panHandlers), {}, {\n          style: {\n            flex: 1\n          },\n          children: _jsx(View, {\n            style: {\n              borderRadius: borderRadius,\n              backgroundColor: backgroundColor,\n              height: height + buttonMargin * 2\n            },\n            onLayout: function onLayout(event) {\n              var width = event.nativeEvent.layout.width;\n              _this2.setState({\n                sliderWidth: width - (hasPadding ? 2 : 0)\n              });\n            },\n            children: _jsxs(View, {\n              style: {\n                flex: 1,\n                flexDirection: 'row',\n                borderColor: borderColor,\n                borderRadius: borderRadius,\n                borderWidth: hasPadding ? borderWidth : 0,\n                alignItems: 'center'\n              },\n              children: [!!sliderWidth && _jsx(Animated.View, {\n                style: [{\n                  height: hasPadding ? height - valuePadding * 2 - borderWidth * 2 : height,\n                  backgroundColor: this.getBgColor(),\n                  width: sliderWidth / options.length - ((hasPadding ? valuePadding : 0) + buttonMargin * 2),\n                  transform: [{\n                    translateX: this.animatedValue.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [hasPadding ? valuePadding : 0, sliderWidth - (hasPadding ? valuePadding : 0)]\n                    })\n                  }],\n                  borderRadius: borderRadius,\n                  margin: buttonMargin\n                }, styles.animated]\n              }), optionsMap]\n            })\n          })\n        }))\n      });\n    }\n  }]);\n  return SwitchSelector;\n}(Component);\nexport { SwitchSelector as default };\nSwitchSelector.defaultProps = {\n  style: {},\n  textStyle: {},\n  selectedTextStyle: {},\n  textContainerStyle: {},\n  selectedTextContainerStyle: {},\n  imageStyle: {},\n  options: [],\n  textColor: '#000000',\n  selectedColor: '#FFFFFF',\n  fontSize: 14,\n  backgroundColor: '#FFFFFF',\n  borderColor: '#C9C9C9',\n  borderRadius: 50,\n  borderWidth: 1,\n  hasPadding: false,\n  valuePadding: 1,\n  height: 40,\n  bold: false,\n  buttonMargin: 0,\n  buttonColor: '#BCD635',\n  returnObject: false,\n  animationDuration: 100,\n  disabled: false,\n  disableValueChangeOnPress: false,\n  initial: -1,\n  value: 1,\n  onPress: null,\n  accessibilityLabel: null,\n  testID: null\n};\nSwitchSelector.propTypes = {\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  textStyle: PropTypes.object,\n  selectedTextStyle: PropTypes.object,\n  textContainerStyle: PropTypes.object,\n  selectedTextContainerStyle: PropTypes.object,\n  imageStyle: PropTypes.object,\n  options: PropTypes.array,\n  textColor: PropTypes.string,\n  selectedColor: PropTypes.string,\n  fontSize: PropTypes.number,\n  backgroundColor: PropTypes.string,\n  borderColor: PropTypes.string,\n  borderRadius: PropTypes.number,\n  borderWidth: PropTypes.number,\n  hasPadding: PropTypes.bool,\n  valuePadding: PropTypes.number,\n  height: PropTypes.number,\n  bold: PropTypes.bool,\n  buttonMargin: PropTypes.number,\n  buttonColor: PropTypes.string,\n  returnObject: PropTypes.bool,\n  animationDuration: PropTypes.number,\n  disabled: PropTypes.bool,\n  disableValueChangeOnPress: PropTypes.bool,\n  initial: PropTypes.number,\n  value: PropTypes.number,\n  onPress: PropTypes.func,\n  accessibilityLabel: PropTypes.string,\n  testID: PropTypes.string\n};","map":{"version":3,"names":["React","Component","PropTypes","styles","button","flex","flexDirection","justifyContent","alignItems","animated","borderWidth","position","SwitchSelector","props","responderEnd","evt","gestureState","disabled","options","selected","state","swipeDirection","getSwipeDirection","length","toggleItem","shouldSetResponder","nativeEvent","touches","Math","abs","dx","dy","animate","value","last","animationDuration","animatedValue","setValue","Animated","timing","toValue","duration","easing","Easing","cubic","useNativeDriver","start","index","callOnPress","returnObject","onPress","isNaN","I18nManager","isRTL","console","log","setState","initial","panResponder","PanResponder","create","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","onPanResponderRelease","onPanResponderTerminate","Value","prevProps","disableValueChangeOnPress","vx","buttonColor","activeColor","style","textStyle","selectedTextStyle","textContainerStyle","selectedTextContainerStyle","imageStyle","textColor","selectedColor","fontSize","backgroundColor","borderColor","borderRadius","hasPadding","valuePadding","height","bold","buttonMargin","accessibilityLabel","testID","sliderWidth","optionsMap","map","element","isSelected","customIcon","imageIcon","width","tintColor","fontWeight","textAlign","color","label","panHandlers","event","layout","getBgColor","transform","translateX","interpolate","inputRange","outputRange","margin","defaultProps","propTypes","oneOfType","object","array","string","number","bool","func"],"sources":["/home/cesa/Github/UniCash/App/node_modules/react-native-switch-selector/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Animated,\n  Easing,\n  I18nManager,\n  Image,\n  PanResponder,\n  Text,\n  TouchableOpacity,\n  View,\n} from 'react-native';\n\nconst styles = {\n  button: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  animated: {\n    borderWidth: 0,\n    position: 'absolute',\n  },\n};\n\nexport default class SwitchSelector extends Component {\n  constructor(props) {\n    super(props);\n    const { initial, options } = props;\n    this.state = {\n      selected: initial,\n    };\n\n    this.panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: this.shouldSetResponder,\n      onMoveShouldSetPanResponder: this.shouldSetResponder,\n      onPanResponderRelease: this.responderEnd,\n      onPanResponderTerminate: this.responderEnd,\n    });\n\n    this.animatedValue = new Animated.Value(\n      initial\n        ? I18nManager.isRTL\n          ? -(initial / options.length)\n          : initial / options.length\n        : 0,\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    const { value, disableValueChangeOnPress } = this.props;\n    if (prevProps.value !== value) {\n      this.toggleItem(value, !disableValueChangeOnPress);\n    }\n  }\n\n  getSwipeDirection(gestureState) {\n    const { dx, dy, vx } = gestureState;\n    // 0.1 velocity\n    if (Math.abs(vx) > 0.1 && Math.abs(dy) < 80) {\n      return dx > 0 ? 'RIGHT' : 'LEFT';\n    }\n    return null;\n  }\n\n  getBgColor() {\n    const { selected } = this.state;\n    const { options, buttonColor } = this.props;\n    if (selected === -1) {\n      return 'transparent';\n    }\n    return options[selected].activeColor || buttonColor;\n  }\n\n  responderEnd = (evt, gestureState) => {\n    const { disabled, options } = this.props;\n    const { selected } = this.state;\n\n    if (disabled) return;\n    const swipeDirection = this.getSwipeDirection(gestureState);\n    if (\n      swipeDirection === 'RIGHT'\n      && selected < options.length - 1\n    ) {\n      this.toggleItem(selected + 1);\n    } else if (swipeDirection === 'LEFT' && selected > 0) {\n      this.toggleItem(selected - 1);\n    }\n  };\n\n  shouldSetResponder = (evt, gestureState) => evt.nativeEvent.touches.length === 1\n    && !(Math.abs(gestureState.dx) < 5 && Math.abs(gestureState.dy) < 5);\n\n  animate = (value, last) => {\n    const { animationDuration } = this.props;\n    this.animatedValue.setValue(last);\n    Animated.timing(this.animatedValue, {\n      toValue: value,\n      duration: animationDuration,\n      easing: Easing.cubic,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  toggleItem = (index, callOnPress = true) => {\n    const { selected } = this.state;\n    const { options, returnObject, onPress } = this.props;\n    if (options.length <= 1 || index === null || isNaN(index)) return;\n    this.animate(\n      I18nManager.isRTL ? -(index / options.length) : index / options.length,\n      I18nManager.isRTL\n        ? -(selected / options.length)\n        : selected / options.length,\n    );\n    if (callOnPress && onPress) {\n      onPress(returnObject ? options[index] : options[index].value);\n    } else {\n      console.log('Call onPress with value: ', options[index].value);\n    }\n    this.setState({ selected: index });\n  };\n\n  render() {\n    const {\n      style,\n      textStyle,\n      selectedTextStyle,\n      textContainerStyle,\n      selectedTextContainerStyle,\n      imageStyle,\n      textColor,\n      selectedColor,\n      fontSize,\n      backgroundColor,\n      borderColor,\n      borderRadius,\n      borderWidth,\n      hasPadding,\n      valuePadding,\n      height,\n      bold,\n      disabled,\n      buttonMargin,\n      options,\n      accessibilityLabel,\n      testID,\n    } = this.props;\n\n    const { selected, sliderWidth } = this.state;\n\n    const optionsMap = options.map((element, index) => {\n      const isSelected = selected === index;\n\n      return (\n        <TouchableOpacity\n          key={index}\n          disabled={disabled || element.disabled}\n          style={[\n            styles.button,\n            isSelected ? selectedTextContainerStyle : textContainerStyle,\n          ]}\n          onPress={() => this.toggleItem(index)}\n          accessibilityLabel={element.accessibilityLabel}\n          testID={element.testID}\n        >\n          {typeof element.customIcon === 'function'\n            ? element.customIcon(isSelected)\n            : element.customIcon}\n          {element.imageIcon && (\n            <Image\n              source={element.imageIcon}\n              style={[\n                {\n                  height: 30,\n                  width: 30,\n                  tintColor: isSelected ? selectedColor : textColor,\n                },\n                imageStyle,\n              ]}\n            />\n          )}\n          <Text\n            style={[\n              {\n                fontSize,\n                fontWeight: bold ? 'bold' : 'normal',\n                textAlign: 'center',\n                color: isSelected ? selectedColor : textColor,\n                backgroundColor: 'transparent',\n              },\n              isSelected ? selectedTextStyle : textStyle,\n            ]}\n          >\n            {element.label}\n          </Text>\n        </TouchableOpacity>\n      );\n    });\n\n    return (\n      <View\n        style={[{ flexDirection: 'row' }, style]}\n        accessibilityLabel={accessibilityLabel}\n        testID={testID}\n      >\n        <View {...this.panResponder.panHandlers} style={{ flex: 1 }}>\n          <View\n            style={{\n              borderRadius,\n              backgroundColor,\n              height: height + buttonMargin * 2,\n            }}\n            onLayout={(event) => {\n              const { width } = event.nativeEvent.layout;\n              this.setState({\n                sliderWidth: width - (hasPadding ? 2 : 0),\n              });\n            }}\n          >\n            <View\n              style={{\n                flex: 1,\n                flexDirection: 'row',\n                borderColor,\n                borderRadius,\n                borderWidth: hasPadding ? borderWidth : 0,\n                alignItems: 'center',\n              }}\n            >\n              {!!sliderWidth && (\n                <Animated.View\n                  style={[\n                    {\n                      height: hasPadding\n                        ? height - valuePadding * 2 - borderWidth * 2\n                        : height,\n                      backgroundColor: this.getBgColor(),\n                      width:\n                        sliderWidth / options.length\n                        - ((hasPadding ? valuePadding : 0) + buttonMargin * 2),\n                      transform: [\n                        {\n                          translateX: this.animatedValue.interpolate({\n                            inputRange: [0, 1],\n                            outputRange: [\n                              hasPadding ? valuePadding : 0,\n                              sliderWidth - (hasPadding ? valuePadding : 0),\n                            ],\n                          }),\n                        },\n                      ],\n                      borderRadius,\n                      margin: buttonMargin,\n                    },\n                    styles.animated,\n                  ]}\n                />\n              )}\n              {optionsMap}\n            </View>\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nSwitchSelector.defaultProps = {\n  style: {},\n  textStyle: {},\n  selectedTextStyle: {},\n  textContainerStyle: {},\n  selectedTextContainerStyle: {},\n  imageStyle: {},\n  options: [],\n  textColor: '#000000',\n  selectedColor: '#FFFFFF',\n  fontSize: 14,\n  backgroundColor: '#FFFFFF',\n  borderColor: '#C9C9C9',\n  borderRadius: 50,\n  borderWidth: 1,\n  hasPadding: false,\n  valuePadding: 1,\n  height: 40,\n  bold: false,\n  buttonMargin: 0,\n  buttonColor: '#BCD635',\n  returnObject: false,\n  animationDuration: 100,\n  disabled: false,\n  disableValueChangeOnPress: false,\n  initial: -1,\n  value: 1,\n  onPress: null,\n  accessibilityLabel: null,\n  testID: null,\n};\n\nSwitchSelector.propTypes = {\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  textStyle: PropTypes.object,\n  selectedTextStyle: PropTypes.object,\n  textContainerStyle: PropTypes.object,\n  selectedTextContainerStyle: PropTypes.object,\n  imageStyle: PropTypes.object,\n  options: PropTypes.array,\n  textColor: PropTypes.string,\n  selectedColor: PropTypes.string,\n  fontSize: PropTypes.number,\n  backgroundColor: PropTypes.string,\n  borderColor: PropTypes.string,\n  borderRadius: PropTypes.number,\n  borderWidth: PropTypes.number,\n  hasPadding: PropTypes.bool,\n  valuePadding: PropTypes.number,\n  height: PropTypes.number,\n  bold: PropTypes.bool,\n  buttonMargin: PropTypes.number,\n  buttonColor: PropTypes.string,\n  returnObject: PropTypes.bool,\n  animationDuration: PropTypes.number,\n  disabled: PropTypes.bool,\n  disableValueChangeOnPress: PropTypes.bool,\n  initial: PropTypes.number,\n  value: PropTypes.number,\n  onPress: PropTypes.func,\n  accessibilityLabel: PropTypes.string,\n  testID: PropTypes.string,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { React, useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SwitchSelector from \"react-native-switch-selector\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function Extrato(_ref) {\n  var navigation = _ref.navigation;\n  var rankingOpt = [{\n    label: \"Tudo\",\n    value: 0\n  }, {\n    label: \"Entrada\",\n    value: 1\n  }, {\n    label: \"Saída\",\n    value: 2\n  }];\n\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    seletor = _useState2[0],\n    setSeletor = _useState2[1];\n\n  var EXTRATO = [{\n    id: '1',\n    valor: 500.00,\n    data: '25/10/2022',\n    hora: '19:30',\n    tipo: 'resgate',\n    origem: {\n      nome: \"UniEvangélica\"\n    }\n  }, {\n    id: '2',\n    valor: -160.00,\n    data: '24/10/2022',\n    hora: '14:45',\n    tipo: 'envio',\n    destinatario: {\n      nome: \"José Algusto da Silva\",\n      curso: \"Eng. Civil\",\n      matricula: \"2020XXX\"\n    }\n  }, {\n    id: '3',\n    valor: 150.00,\n    data: '24/10/2022',\n    hora: '16:59',\n    tipo: 'recebido',\n    origem: {\n      nome: \"Allan Turing\",\n      curso: \"Eng. de Software\",\n      matricula: \"2020XXX\"\n    }\n  }, {\n    id: '4',\n    valor: -250.00,\n    data: '23/10/2022',\n    hora: '12:39',\n    tipo: 'pagamento',\n    destinatario: {\n      nome: \"Ultra Coffee UniEvangelica \",\n      local: \"UniEvangélica\"\n    }\n  }, {\n    id: '5',\n    valor: 250.00,\n    data: '23/10/2022',\n    hora: '17:30',\n    tipo: 'resgate',\n    origem: {\n      nome: \"UniEvangélica\"\n    }\n  }, {\n    id: '6',\n    valor: -450.00,\n    data: '22/10/2022',\n    hora: '12:22',\n    tipo: 'pagamento',\n    destinatario: {\n      nome: \"Ultra Coffee UniEvangelica \",\n      local: \"UniEvangélica\"\n    }\n  }, {\n    id: '7',\n    valor: 180.00,\n    data: '20/10/2022',\n    hora: '16:00',\n    tipo: 'recebido',\n    origem: {\n      nome: \"Antony Stark\",\n      curso: \"Eng. de Software\",\n      matricula: \"2020XXX\"\n    }\n  }, {\n    id: '8',\n    valor: 1350.00,\n    data: '24/10/2022',\n    hora: '23:45',\n    tipo: 'recebido',\n    origem: {\n      nome: \"Elvis\",\n      curso: \"Eng. de Software\",\n      matricula: \"1959XXX\"\n    }\n  }, {\n    id: '9',\n    valor: 2500.00,\n    data: '16/10/2022',\n    hora: '19:30',\n    tipo: 'resgate',\n    origem: {\n      nome: \"UniEvangélica\"\n    }\n  }, {\n    id: '10',\n    valor: -360.00,\n    data: '16/10/2022',\n    hora: '14:45',\n    tipo: 'envio',\n    destinatario: {\n      nome: \"José Algusto da Silva\",\n      curso: \"Eng. Civil\",\n      matricula: \"2020XXX\"\n    }\n  }];\n\n  return _jsx(View, {\n    children: _jsx(SafeAreaView, {\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(View, {\n          style: {\n            borderBottomColor: \"#FE3032\",\n            borderBottomWidth: 5\n          },\n          children: _jsx(SwitchSelector, {\n            height: 40,\n            buttonColor: \"#17A7E0\",\n            backgroundColor: \"#232D53\",\n            fontSize: 15,\n            bold: true,\n            borderRadius: 0,\n            textColor: \"#FFFFFF\",\n            initial: 0,\n            options: rankingOpt,\n            onPress: function onPress(seletor) {\n              return setSeletor(seletor);\n            }\n          })\n        }), seletor == 0 ? _jsx(FlatList, {\n          style: styles.FlatList,\n          data: EXTRATO,\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          },\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item;\n            return _jsx(View, {\n              style: styles.card,\n              children: item.tipo == \"resgate\" ? _jsxs(_Fragment, {\n                children: [_jsx(Image, {\n                  style: styles.iconeRP,\n                  source: require(\"../assets/Resgate.png\")\n                }), _jsxs(View, {\n                  style: styles.info,\n                  children: [_jsxs(Text, {\n                    style: styles.valor,\n                    children: [item.valor, \" UC\"]\n                  }), _jsx(Text, {\n                    style: styles.tipo,\n                    children: \"Resgate realizado\"\n                  }), _jsx(Text, {\n                    style: styles.origemDestino,\n                    children: item.origem.nome\n                  })]\n                }), _jsxs(View, {\n                  style: styles.TransferenciaData,\n                  children: [_jsx(Text, {\n                    style: styles.Data,\n                    children: item.data\n                  }), _jsx(Text, {\n                    style: styles.Data,\n                    children: item.hora\n                  })]\n                })]\n              }) : item.tipo == \"pagamento\" ? _jsxs(_Fragment, {\n                children: [_jsx(Image, {\n                  style: styles.iconeRP,\n                  source: require(\"../assets/Pagamento.png\")\n                }), _jsxs(View, {\n                  style: styles.info,\n                  children: [_jsxs(Text, {\n                    style: styles.valor,\n                    children: [item.valor, \" UC\"]\n                  }), _jsx(Text, {\n                    style: styles.tipo,\n                    children: \"Pagamaneto realizado\"\n                  }), _jsx(Text, {\n                    style: styles.origemDestino,\n                    children: item.destinatario.nome\n                  })]\n                }), _jsxs(View, {\n                  style: styles.TransferenciaData,\n                  children: [_jsx(Text, {\n                    style: styles.Data,\n                    children: item.data\n                  }), _jsx(Text, {\n                    style: styles.Data,\n                    children: item.hora\n                  })]\n                })]\n              }) : item.tipo == \"recebido\" ? _jsxs(_Fragment, {\n                children: [_jsx(Image, {\n                  style: styles.iconeES,\n                  source: require(\"../assets/Recebido.png\")\n                }), _jsxs(View, {\n                  style: styles.info,\n                  children: [_jsxs(Text, {\n                    style: styles.valor,\n                    children: [item.valor, \" UC\"]\n                  }), _jsx(Text, {\n                    style: styles.tipo,\n                    children: \"Transfer\\xEAncia recebida\"\n                  }), _jsxs(Text, {\n                    style: styles.origemDestino,\n                    children: [item.origem.nome, \" - \", item.origem.matricula]\n                  })]\n                }), _jsxs(View, {\n                  style: styles.TransferenciaData,\n                  children: [_jsx(Text, {\n                    style: styles.Data,\n                    children: item.data\n                  }), _jsx(Text, {\n                    style: styles.Data,\n                    children: item.hora\n                  })]\n                })]\n              }) : item.tipo == \"envio\" ? _jsxs(_Fragment, {\n                children: [_jsx(Image, {\n                  style: styles.iconeES,\n                  source: require(\"../assets/Envio.png\")\n                }), _jsxs(View, {\n                  style: styles.info,\n                  children: [_jsxs(Text, {\n                    style: styles.valor,\n                    children: [item.valor, \" UC\"]\n                  }), _jsx(Text, {\n                    style: styles.tipo,\n                    children: \"Transfer\\xEAncia realizada\"\n                  }), _jsx(Text, {\n                    style: styles.origemDestino,\n                    children: item.destinatario.nome\n                  })]\n                }), _jsxs(View, {\n                  style: styles.TransferenciaData,\n                  children: [_jsx(Text, {\n                    style: styles.Data,\n                    children: item.data\n                  }), _jsx(Text, {\n                    style: styles.Data,\n                    children: item.hora\n                  })]\n                })]\n              }) : _jsx(_Fragment, {})\n            });\n          }\n        }) : seletor == 1 ? _jsx(FlatList, {\n          style: styles.FlatList,\n          data: EXTRATO,\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          },\n          renderItem: function renderItem(_ref3) {\n            var item = _ref3.item;\n            return _jsx(View, {\n              style: styles.card,\n              children: item.tipo == \"resgate\" ? _jsxs(_Fragment, {\n                children: [_jsx(Image, {\n                  style: styles.iconeRP,\n                  source: require(\"../assets/Resgate.png\")\n                }), _jsxs(View, {\n                  style: styles.info,\n                  children: [_jsxs(Text, {\n                    style: styles.valor,\n                    children: [item.valor, \" UC\"]\n                  }), _jsx(Text, {\n                    style: styles.tipo,\n                    children: \"Resgate realizado\"\n                  }), _jsx(Text, {\n                    style: styles.origemDestino,\n                    children: item.origem.nome\n                  })]\n                }), _jsxs(View, {\n                  style: styles.TransferenciaData,\n                  children: [_jsx(Text, {\n                    style: styles.Data,\n                    children: item.data\n                  }), _jsx(Text, {\n                    style: styles.Data,\n                    children: item.hora\n                  })]\n                })]\n              }) : item.tipo == \"recebido\" ? _jsxs(_Fragment, {\n                children: [_jsx(Image, {\n                  style: styles.iconeES,\n                  source: require(\"../assets/Recebido.png\")\n                }), _jsxs(View, {\n                  style: styles.info,\n                  children: [_jsxs(Text, {\n                    style: styles.valor,\n                    children: [item.valor, \" UC\"]\n                  }), _jsx(Text, {\n                    style: styles.tipo,\n                    children: \"Transfer\\xEAncia recebida\"\n                  }), _jsxs(Text, {\n                    style: styles.origemDestino,\n                    children: [item.origem.nome, \" - \", item.origem.matricula]\n                  })]\n                }), _jsxs(View, {\n                  style: styles.TransferenciaData,\n                  children: [_jsx(Text, {\n                    style: styles.Data,\n                    children: item.data\n                  }), _jsx(Text, {\n                    style: styles.Data,\n                    children: item.hora\n                  })]\n                })]\n              }) : _jsx(_Fragment, {})\n            });\n          }\n        }) : seletor == 2 ? _jsx(FlatList, {\n          style: styles.FlatList,\n          data: EXTRATO,\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          },\n          renderItem: function renderItem(_ref4) {\n            var item = _ref4.item;\n            return _jsx(View, {\n              style: styles.card,\n              children: item.tipo == \"pagamento\" ? _jsxs(_Fragment, {\n                children: [_jsx(Image, {\n                  style: styles.iconeRP,\n                  source: require(\"../assets/Pagamento.png\")\n                }), _jsxs(View, {\n                  style: styles.info,\n                  children: [_jsxs(Text, {\n                    style: styles.valor,\n                    children: [item.valor, \" UC\"]\n                  }), _jsx(Text, {\n                    style: styles.tipo,\n                    children: \"Pagamaneto realizado\"\n                  }), _jsx(Text, {\n                    style: styles.origemDestino,\n                    children: item.destinatario.nome\n                  })]\n                }), _jsxs(View, {\n                  style: styles.TransferenciaData,\n                  children: [_jsx(Text, {\n                    style: styles.Data,\n                    children: item.data\n                  }), _jsx(Text, {\n                    style: styles.Data,\n                    children: item.hora\n                  })]\n                })]\n              }) : item.tipo == \"envio\" ? _jsxs(_Fragment, {\n                children: [_jsx(Image, {\n                  style: styles.iconeES,\n                  source: require(\"../assets/Envio.png\")\n                }), _jsxs(View, {\n                  style: styles.info,\n                  children: [_jsxs(Text, {\n                    style: styles.valor,\n                    children: [item.valor, \" UC\"]\n                  }), _jsx(Text, {\n                    style: styles.tipo,\n                    children: \"Transfer\\xEAncia realizada\"\n                  }), _jsx(Text, {\n                    style: styles.origemDestino,\n                    children: item.destinatario.nome\n                  })]\n                }), _jsxs(View, {\n                  style: styles.TransferenciaData,\n                  children: [_jsx(Text, {\n                    style: styles.Data,\n                    children: item.data\n                  }), _jsx(Text, {\n                    style: styles.Data,\n                    children: item.hora\n                  })]\n                })]\n              }) : _jsx(_Fragment, {})\n            });\n          }\n        }) : _jsx(_Fragment, {})]\n      })\n    })\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"D9D9D9\"\n  },\n  FlatList: {\n    marginBottom: 80\n  },\n  card: {\n    flexDirection: \"row\",\n    alignItems: \"flex-start\",\n    justifyContent: \"space-evenly\",\n    backgroundColor: \"#FFFFFF\"\n  },\n\n  iconeRP: {\n    margin: 10,\n    height: 25,\n    width: 20\n  },\n  iconeES: {\n    margin: 10,\n    height: 20,\n    width: 25\n  },\n  info: {\n    margin: 10,\n    width: 180\n  },\n  valor: {\n    fontSize: 18,\n    color: \"#484848\",\n    fontWeight: \"500\"\n  },\n  tipo: {\n    fontSize: 14,\n    color: \"#484848\",\n    fontWeight: \"500\"\n  },\n  origemSaida: {\n    fontSize: 14,\n    color: \"#7E7E7E\",\n    fontWeight: \"500\"\n  },\n  TransferenciaData: {\n    margin: 10,\n    flexDirection: \"column\",\n    alignItems: \"flex-end\",\n    justifyContent: \"center\"\n  },\n  Data: {\n    fontSize: 16,\n    color: \"#7E7E7E\",\n    fontWeight: \"500\"\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","SwitchSelector","Extrato","navigation","rankingOpt","label","value","seletor","setSeletor","EXTRATO","id","valor","data","hora","tipo","origem","nome","destinatario","curso","matricula","local","styles","container","borderBottomColor","borderBottomWidth","FlatList","item","card","iconeRP","require","info","origemDestino","TransferenciaData","Data","iconeES","StyleSheet","create","backgroundColor","marginBottom","flexDirection","alignItems","justifyContent","margin","height","width","fontSize","color","fontWeight","origemSaida"],"sources":["/home/cesa/Github/UniCash/App/Paginas/Extrato.js"],"sourcesContent":["import { React, useEffect, useState } from \"react\";\nimport {\n    StyleSheet,\n    SafeAreaView,\n    View,\n    ScrollView,\n    FlatList,\n    Text,\n    Image\n} from \"react-native\";\nimport SwitchSelector from \"react-native-switch-selector\";\n\nexport default function Extrato({ navigation }) {\n\n    const rankingOpt = [\n        { label: \"Tudo\", value: 0 },\n        { label: \"Entrada\", value: 1 },\n        { label: \"Saída\", value: 2 }\n    ]; //Seletor do ranking.\n\n    const [seletor, setSeletor] = useState(0);\n\n    //Dados de um Extrato Fake, para integrar a uma API real necessidade repetir\n    // um useEfect semelhante ão da tela Home.\n    const EXTRATO = [\n        {\n            id: '1',\n            valor: 500.00,\n            data: '25/10/2022',\n            hora: '19:30',\n            tipo: 'resgate',\n            origem: {\n                nome: \"UniEvangélica\",\n            },\n        },\n        {\n            id: '2',\n            valor: -160.00,\n            data: '24/10/2022',\n            hora: '14:45',\n            tipo: 'envio',\n            destinatario: {\n                nome: \"José Algusto da Silva\",\n                curso: \"Eng. Civil\",\n                matricula: \"2020XXX\"\n            },\n        },\n        {\n            id: '3',\n            valor: 150.00,\n            data: '24/10/2022',\n            hora: '16:59',\n            tipo: 'recebido',\n            origem: {\n                nome: \"Allan Turing\",\n                curso: \"Eng. de Software\",\n                matricula: \"2020XXX\"\n            },\n        },\n        {\n            id: '4',\n            valor: -250.00,\n            data: '23/10/2022',\n            hora: '12:39',\n            tipo: 'pagamento',\n            destinatario: {\n                nome: \"Ultra Coffee UniEvangelica \",\n                local: \"UniEvangélica\",\n            },\n        },\n        {\n            id: '5',\n            valor: 250.00,\n            data: '23/10/2022',\n            hora: '17:30',\n            tipo: 'resgate',\n            origem: {\n                nome: \"UniEvangélica\",\n            },\n        },\n        {\n            id: '6',\n            valor: -450.00,\n            data: '22/10/2022',\n            hora: '12:22',\n            tipo: 'pagamento',\n            destinatario: {\n                nome: \"Ultra Coffee UniEvangelica \",\n                local: \"UniEvangélica\",\n            },\n        },\n        {\n            id: '7',\n            valor: 180.00,\n            data: '20/10/2022',\n            hora: '16:00',\n            tipo: 'recebido',\n            origem: {\n                nome: \"Antony Stark\",\n                curso: \"Eng. de Software\",\n                matricula: \"2020XXX\"\n            },\n        },\n        {\n            id: '8',\n            valor: 1350.00,\n            data: '24/10/2022',\n            hora: '23:45',\n            tipo: 'recebido',\n            origem: {\n                nome: \"Elvis\",\n                curso: \"Eng. de Software\",\n                matricula: \"1959XXX\"\n            },\n        },\n        {\n            id: '9',\n            valor: 2500.00,\n            data: '16/10/2022',\n            hora: '19:30',\n            tipo: 'resgate',\n            origem: {\n                nome: \"UniEvangélica\",\n            },\n        },\n        {\n            id: '10',\n            valor: -360.00,\n            data: '16/10/2022',\n            hora: '14:45',\n            tipo: 'envio',\n            destinatario: {\n                nome: \"José Algusto da Silva\",\n                curso: \"Eng. Civil\",\n                matricula: \"2020XXX\"\n            },\n        },\n    ];\n    //Fim dados Fakes\n\n    //Dados da requisição.\n    // useEffect(() => {\n    //     fetch('https://fake-api-unicash.herokuapp.com/user')\n    //         .then(response => response.json())\n    //         .then((response) => {\n    //             setData(response);\n    //             console.log(response);\n    //         })\n    // }, []);\n\n    return (\n        <View>\n            <SafeAreaView>\n                <View\n                    style={styles.container}\n                >\n                    <View\n                        style={{\n                            borderBottomColor: \"#FE3032\",\n                            borderBottomWidth: 5,\n                        }}\n                    >\n                        <SwitchSelector\n                            height={40}\n                            buttonColor={\"#17A7E0\"}\n                            backgroundColor={\"#232D53\"}\n                            fontSize={15}\n                            bold={true}\n                            borderRadius={0}\n                            textColor={\"#FFFFFF\"}\n                            initial={0}\n                            options={rankingOpt}\n                            onPress={(seletor) => setSeletor(seletor)}\n                        />\n                    </View>\n\n                    {\n                        (seletor == 0) ? (\n                            <FlatList\n                                style={styles.FlatList}\n                                data={EXTRATO}\n                                keyExtractor={(item) => { return item.id }}\n                                renderItem={({ item }) => (\n                                    <View\n                                        style={styles.card}\n                                    >\n                                        {\n                                            (item.tipo == \"resgate\") ? (\n                                                <>\n                                                    <Image\n                                                        style={styles.iconeRP}\n                                                        source={require('../assets/Resgate.png')}\n                                                    />\n                                                    <View\n                                                        style={styles.info}\n                                                    >\n                                                        <Text\n                                                            style={styles.valor}\n                                                        >\n                                                            {item.valor} UC\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.tipo}\n                                                        >\n                                                            Resgate realizado\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.origemDestino}\n                                                        >\n                                                            {item.origem.nome}\n                                                        </Text>\n                                                    </View>\n                                                    <View\n                                                        style={styles.TransferenciaData}\n                                                    >\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.data}\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.hora}\n                                                        </Text>\n                                                    </View>\n                                                </>\n                                            ) : (item.tipo == \"pagamento\") ? (\n                                                <>\n                                                    <Image\n                                                        style={styles.iconeRP}\n                                                        source={require('../assets/Pagamento.png')}\n                                                    />\n                                                    <View\n                                                        style={styles.info}\n                                                    >\n                                                        <Text\n                                                            style={styles.valor}\n                                                        >\n                                                            {item.valor} UC\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.tipo}\n                                                        >\n                                                            Pagamaneto realizado\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.origemDestino}\n                                                        >\n                                                            {item.destinatario.nome}\n                                                        </Text>\n                                                    </View>\n                                                    <View\n                                                        style={styles.TransferenciaData}\n                                                    >\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.data}\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.hora}\n                                                        </Text>\n                                                    </View>\n                                                </>\n                                            ) : (item.tipo == \"recebido\") ? (\n                                                <>\n                                                    <Image\n                                                        style={styles.iconeES}\n                                                        source={require('../assets/Recebido.png')}\n                                                    />\n                                                    <View\n                                                        style={styles.info}\n                                                    >\n                                                        <Text\n                                                            style={styles.valor}\n                                                        >\n                                                            {item.valor} UC\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.tipo}\n                                                        >\n                                                            Transferência recebida\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.origemDestino}\n                                                        >\n                                                            {item.origem.nome} - {item.origem.matricula}\n                                                        </Text>\n                                                    </View>\n                                                    <View\n                                                        style={styles.TransferenciaData}\n                                                    >\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.data}\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.hora}\n                                                        </Text>\n                                                    </View>\n                                                </>\n                                            ) : (item.tipo == \"envio\") ? (\n                                                <>\n                                                    <Image\n                                                        style={styles.iconeES}\n                                                        source={require('../assets/Envio.png')}\n                                                    />\n                                                    <View\n                                                        style={styles.info}\n                                                    >\n                                                        <Text\n                                                            style={styles.valor}\n                                                        >\n                                                            {item.valor} UC\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.tipo}\n                                                        >\n                                                            Transferência realizada\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.origemDestino}\n                                                        >\n                                                            {item.destinatario.nome}\n                                                        </Text>\n                                                    </View>\n                                                    <View\n                                                        style={styles.TransferenciaData}\n                                                    >\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.data}\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.hora}\n                                                        </Text>\n                                                    </View>\n                                                </>\n                                            ) : <>\n                                            </>\n                                        }\n                                    </View>\n                                )}\n                            />\n                        ) : (seletor == 1) ? (\n                            <FlatList\n                                style={styles.FlatList}\n                                data={EXTRATO}\n                                keyExtractor={(item) => { return item.id }}\n                                renderItem={({ item }) => (\n                                    <View\n                                        style={styles.card}\n                                    >\n                                        {\n                                            (item.tipo == \"resgate\") ? (\n                                                <>\n                                                    <Image\n                                                        style={styles.iconeRP}\n                                                        source={require('../assets/Resgate.png')}\n                                                    />\n                                                    <View\n                                                        style={styles.info}\n                                                    >\n                                                        <Text\n                                                            style={styles.valor}\n                                                        >\n                                                            {item.valor} UC\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.tipo}\n                                                        >\n                                                            Resgate realizado\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.origemDestino}\n                                                        >\n                                                            {item.origem.nome}\n                                                        </Text>\n                                                    </View>\n                                                    <View\n                                                        style={styles.TransferenciaData}\n                                                    >\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.data}\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.hora}\n                                                        </Text>\n                                                    </View>\n                                                </>\n                                            ) : (item.tipo == \"recebido\") ? (\n                                                <>\n                                                    <Image\n                                                        style={styles.iconeES}\n                                                        source={require('../assets/Recebido.png')}\n                                                    />\n                                                    <View\n                                                        style={styles.info}\n                                                    >\n                                                        <Text\n                                                            style={styles.valor}\n                                                        >\n                                                            {item.valor} UC\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.tipo}\n                                                        >\n                                                            Transferência recebida\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.origemDestino}\n                                                        >\n                                                            {item.origem.nome} - {item.origem.matricula}\n                                                        </Text>\n                                                    </View>\n                                                    <View\n                                                        style={styles.TransferenciaData}\n                                                    >\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.data}\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.hora}\n                                                        </Text>\n                                                    </View>\n                                                </>\n                                            ) : <>\n                                            </>\n                                        }\n                                    </View>\n                                )}\n                            />\n                        ) : (seletor == 2) ? (\n                            <FlatList\n                                style={styles.FlatList}\n                                data={EXTRATO}\n                                keyExtractor={(item) => { return item.id }}\n                                renderItem={({ item }) => (\n                                    <View\n                                        style={styles.card}\n                                    >\n                                        {\n                                            (item.tipo == \"pagamento\") ? (\n                                                <>\n                                                    <Image\n                                                        style={styles.iconeRP}\n                                                        source={require('../assets/Pagamento.png')}\n                                                    />\n                                                    <View\n                                                        style={styles.info}\n                                                    >\n                                                        <Text\n                                                            style={styles.valor}\n                                                        >\n                                                            {item.valor} UC\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.tipo}\n                                                        >\n                                                            Pagamaneto realizado\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.origemDestino}\n                                                        >\n                                                            {item.destinatario.nome}\n                                                        </Text>\n                                                    </View>\n                                                    <View\n                                                        style={styles.TransferenciaData}\n                                                    >\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.data}\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.hora}\n                                                        </Text>\n                                                    </View>\n                                                </>\n                                            ) : (item.tipo == \"envio\") ? (\n                                                <>\n                                                    <Image\n                                                        style={styles.iconeES}\n                                                        source={require('../assets/Envio.png')}\n                                                    />\n                                                    <View\n                                                        style={styles.info}\n                                                    >\n                                                        <Text\n                                                            style={styles.valor}\n                                                        >\n                                                            {item.valor} UC\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.tipo}\n                                                        >\n                                                            Transferência realizada\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.origemDestino}\n                                                        >\n                                                            {item.destinatario.nome}\n                                                        </Text>\n                                                    </View>\n                                                    <View\n                                                        style={styles.TransferenciaData}\n                                                    >\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.data}\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.hora}\n                                                        </Text>\n                                                    </View>\n                                                </>\n                                            ) : <>\n                                            </>\n                                        }\n                                    </View>\n                                )}\n                            />\n                        ) : <>\n                        </>\n                    }\n\n                </View>\n            </SafeAreaView>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: \"D9D9D9\",\n    },\n    FlatList: {\n        // position: \"relative\"\n        marginBottom: 80,\n    },\n    card: {\n        flexDirection: \"row\",\n        alignItems: \"flex-start\",\n        justifyContent: \"space-evenly\",\n        backgroundColor: \"#FFFFFF\",\n        //borderRadius: 8\n    },\n    iconeRP: {\n        margin: 10,\n        height: 25,\n        width: 20\n    },\n    iconeES: {\n        margin: 10,\n        height: 20,\n        width: 25\n    },\n    info: {\n        margin: 10,\n        width: 180\n    },\n    // valorEntrada: {\n    //     fontSize: 18,\n    //     color: \"#17A7E0\",\n    //     fontWeight: \"500\",\n    // },\n    // tipoEntrada: {\n    //     fontSize: 14,\n    //     color: \"#17A7E0\",\n    //     fontWeight: \"500\",\n    // },\n    valor: {\n        fontSize: 18,\n        color: \"#484848\",\n        fontWeight: \"500\",\n    },\n    tipo: {\n        fontSize: 14,\n        color: \"#484848\",\n        fontWeight: \"500\",\n    },\n    origemSaida: {\n        fontSize: 14,\n        color: \"#7E7E7E\",\n        fontWeight: \"500\",\n    },\n    TransferenciaData: {\n        margin: 10,\n        //paddingVertical: 10,\n        flexDirection: \"column\",\n        alignItems: \"flex-end\",\n        justifyContent: \"center\"\n    },\n    Data: {\n        fontSize: 16,\n        color: \"#7E7E7E\",\n        fontWeight: \"500\",\n    },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}
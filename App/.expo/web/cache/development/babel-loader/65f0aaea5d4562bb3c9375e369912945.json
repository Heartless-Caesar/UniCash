{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"spacing\", \"fixed\", \"data\", \"itemDimension\", \"renderItem\", \"horizontal\", \"onLayout\", \"staticDimension\", \"maxDimension\", \"additionalRowStyle\", \"itemContainerStyle\", \"keyExtractor\", \"invertedRow\", \"maxItemsPerRow\", \"adjustGridToStyles\", \"customFlatList\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { forwardRef, memo, useState, useCallback, useMemo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport PropTypes from 'prop-types';\nimport { chunkArray, calculateDimensions, generateStyles, getAdjustedTotalDimensions } from \"./utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar FlatGrid = memo(forwardRef(function (props, ref) {\n  var style = props.style,\n    spacing = props.spacing,\n    fixed = props.fixed,\n    data = props.data,\n    itemDimension = props.itemDimension,\n    renderItem = props.renderItem,\n    horizontal = props.horizontal,\n    onLayout = props.onLayout,\n    staticDimension = props.staticDimension,\n    maxDimension = props.maxDimension,\n    externalRowStyle = props.additionalRowStyle,\n    itemContainerStyle = props.itemContainerStyle,\n    keyExtractor = props.keyExtractor,\n    invertedRow = props.invertedRow,\n    maxItemsPerRow = props.maxItemsPerRow,\n    adjustGridToStyles = props.adjustGridToStyles,\n    _props$customFlatList = props.customFlatList,\n    FlatListComponent = _props$customFlatList === void 0 ? FlatList : _props$customFlatList,\n    restProps = _objectWithoutProperties(props, _excluded);\n\n  if (props.items && !props.data) {\n    throw new Error('React Native Super Grid - Prop \"items\" has been renamed to \"data\" in version 4');\n  }\n  var _useState = useState(function () {\n      var defaultTotalDimension = staticDimension;\n      if (!staticDimension) {\n        var dimension = horizontal ? 'height' : 'width';\n        defaultTotalDimension = getAdjustedTotalDimensions({\n          totalDimension: Dimensions.get('window')[dimension],\n          maxDimension: maxDimension,\n          contentContainerStyle: restProps.contentContainerStyle,\n          style: style,\n          horizontal: horizontal,\n          adjustGridToStyles: adjustGridToStyles\n        });\n      }\n      return defaultTotalDimension;\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    totalDimension = _useState2[0],\n    setTotalDimension = _useState2[1];\n  var onLayoutLocal = useCallback(function (e) {\n    if (!staticDimension) {\n      var _ref = e.nativeEvent.layout || {},\n        width = _ref.width,\n        height = _ref.height;\n      var newTotalDimension = horizontal ? height : width;\n      newTotalDimension = getAdjustedTotalDimensions({\n        totalDimension: newTotalDimension,\n        maxDimension: maxDimension,\n        contentContainerStyle: restProps.contentContainerStyle,\n        style: style,\n        horizontal: horizontal,\n        adjustGridToStyles: adjustGridToStyles\n      });\n      if (totalDimension !== newTotalDimension && newTotalDimension > 0) {\n        setTotalDimension(newTotalDimension);\n      }\n    }\n\n    if (onLayout) {\n      onLayout(e);\n    }\n  }, [staticDimension, maxDimension, totalDimension, horizontal, onLayout, adjustGridToStyles]);\n  var renderRow = useCallback(function (_ref2) {\n    var rowItems = _ref2.rowItems,\n      rowIndex = _ref2.rowIndex,\n      separators = _ref2.separators,\n      isLastRow = _ref2.isLastRow,\n      itemsPerRow = _ref2.itemsPerRow,\n      rowStyle = _ref2.rowStyle,\n      containerStyle = _ref2.containerStyle;\n    var additionalRowStyle = {};\n    if (isLastRow) {\n      additionalRowStyle = _objectSpread(_objectSpread({}, !horizontal ? {\n        marginBottom: spacing\n      } : {}), horizontal ? {\n        marginRight: spacing\n      } : {});\n    }\n    return _jsx(View, {\n      style: [rowStyle, additionalRowStyle, externalRowStyle],\n      children: rowItems.map(function (item, index) {\n        var i = invertedRow ? -index + itemsPerRow - 1 : index;\n        return _jsx(View, {\n          style: [containerStyle, itemContainerStyle],\n          children: renderItem({\n            item: item,\n            index: rowIndex * itemsPerRow + i,\n            separators: separators,\n            rowIndex: rowIndex\n          })\n        }, keyExtractor ? keyExtractor(item, rowIndex * itemsPerRow + i) : \"item_\" + (rowIndex * itemsPerRow + i));\n      })\n    });\n  }, [renderItem, spacing, keyExtractor, externalRowStyle, itemContainerStyle, horizontal, invertedRow]);\n  var _useMemo = useMemo(function () {\n      return calculateDimensions({\n        itemDimension: itemDimension,\n        staticDimension: staticDimension,\n        totalDimension: totalDimension,\n        spacing: spacing,\n        fixed: fixed,\n        maxItemsPerRow: maxItemsPerRow\n      });\n    }, [itemDimension, staticDimension, totalDimension, spacing, fixed, maxItemsPerRow]),\n    containerDimension = _useMemo.containerDimension,\n    itemsPerRow = _useMemo.itemsPerRow,\n    fixedSpacing = _useMemo.fixedSpacing;\n  var _useMemo2 = useMemo(function () {\n      return generateStyles({\n        horizontal: horizontal,\n        itemDimension: itemDimension,\n        containerDimension: containerDimension,\n        spacing: spacing,\n        fixedSpacing: fixedSpacing,\n        fixed: fixed\n      });\n    }, [horizontal, itemDimension, containerDimension, spacing, fixedSpacing, fixed]),\n    containerStyle = _useMemo2.containerStyle,\n    rowStyle = _useMemo2.rowStyle;\n  var rows = chunkArray(data, itemsPerRow);\n  if (invertedRow) {\n    rows = rows.map(function (r) {\n      return r.reverse();\n    });\n  }\n  var localKeyExtractor = useCallback(function (rowItems, index) {\n    if (keyExtractor) {\n      return rowItems.map(function (rowItem, rowItemIndex) {\n        return keyExtractor(rowItem, rowItemIndex);\n      }).join('_');\n    }\n    return \"row_\" + index;\n  }, [keyExtractor]);\n  return _jsx(FlatListComponent, _objectSpread(_objectSpread({\n    data: rows,\n    ref: ref,\n    extraData: totalDimension,\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item,\n        index = _ref3.index;\n      return renderRow({\n        rowItems: item,\n        rowIndex: index,\n        isLastRow: index === rows.length - 1,\n        itemsPerRow: itemsPerRow,\n        rowStyle: rowStyle,\n        containerStyle: containerStyle\n      });\n    },\n    style: [_objectSpread({}, horizontal ? {\n      paddingLeft: spacing\n    } : {\n      paddingTop: spacing\n    }), style],\n    onLayout: onLayoutLocal,\n    keyExtractor: localKeyExtractor\n  }, restProps), {}, {\n    horizontal: horizontal\n  }));\n}));\nFlatGrid.displayName = 'FlatGrid';\nFlatGrid.propTypes = {\n  renderItem: PropTypes.func.isRequired,\n  data: PropTypes.arrayOf(PropTypes.any).isRequired,\n  itemDimension: PropTypes.number,\n  maxDimension: PropTypes.number,\n  fixed: PropTypes.bool,\n  spacing: PropTypes.number,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  additionalRowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  itemContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  staticDimension: PropTypes.number,\n  horizontal: PropTypes.bool,\n  onLayout: PropTypes.func,\n  keyExtractor: PropTypes.func,\n  listKey: PropTypes.string,\n  invertedRow: PropTypes.bool,\n  maxItemsPerRow: PropTypes.number,\n  adjustGridToStyles: PropTypes.bool,\n  customFlatList: PropTypes.elementType\n};\nFlatGrid.defaultProps = {\n  fixed: false,\n  itemDimension: 120,\n  spacing: 10,\n  style: {},\n  additionalRowStyle: undefined,\n  itemContainerStyle: undefined,\n  staticDimension: undefined,\n  horizontal: false,\n  onLayout: null,\n  keyExtractor: null,\n  listKey: undefined,\n  maxDimension: undefined,\n  invertedRow: false,\n  maxItemsPerRow: undefined,\n  adjustGridToStyles: false,\n  customFlatList: undefined\n};\nexport default FlatGrid;","map":{"version":3,"names":["React","forwardRef","memo","useState","useCallback","useMemo","PropTypes","chunkArray","calculateDimensions","generateStyles","getAdjustedTotalDimensions","FlatGrid","props","ref","style","spacing","fixed","data","itemDimension","renderItem","horizontal","onLayout","staticDimension","maxDimension","externalRowStyle","additionalRowStyle","itemContainerStyle","keyExtractor","invertedRow","maxItemsPerRow","adjustGridToStyles","customFlatList","FlatListComponent","FlatList","restProps","items","Error","defaultTotalDimension","dimension","totalDimension","Dimensions","get","contentContainerStyle","setTotalDimension","onLayoutLocal","e","nativeEvent","layout","width","height","newTotalDimension","renderRow","rowItems","rowIndex","separators","isLastRow","itemsPerRow","rowStyle","containerStyle","marginBottom","marginRight","map","item","index","i","containerDimension","fixedSpacing","rows","r","reverse","localKeyExtractor","rowItem","rowItemIndex","join","length","paddingLeft","paddingTop","displayName","propTypes","func","isRequired","arrayOf","any","number","bool","oneOfType","object","array","listKey","string","elementType","defaultProps","undefined"],"sources":["C:/Users/joaov/OneDrive/Documents/Node_Projects/UniCash/App/node_modules/react-native-super-grid/FlatGrid.js"],"sourcesContent":["import React, {\n  forwardRef, memo, useState, useCallback, useMemo,\n} from 'react';\nimport {\n  View, Dimensions, FlatList,\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport { chunkArray, calculateDimensions, generateStyles, getAdjustedTotalDimensions } from './utils';\n\n\nconst FlatGrid = memo(\n  forwardRef((props, ref) => {\n    const {\n      style,\n      spacing,\n      fixed,\n      data,\n      itemDimension,\n      renderItem,\n      horizontal,\n      onLayout,\n      staticDimension,\n      maxDimension,\n      additionalRowStyle: externalRowStyle,\n      itemContainerStyle,\n      keyExtractor,\n      invertedRow,\n      maxItemsPerRow,\n      adjustGridToStyles,\n      customFlatList: FlatListComponent = FlatList,\n      ...restProps\n    } = props;\n\n    // eslint-disable-next-line react/prop-types\n    if (props.items && !props.data) {\n      // eslint-disable-next-line no-console\n      throw new Error('React Native Super Grid - Prop \"items\" has been renamed to \"data\" in version 4');\n    }\n\n    const [totalDimension, setTotalDimension] = useState(() => {\n      let defaultTotalDimension = staticDimension;\n\n      if (!staticDimension) {\n        const dimension = horizontal ? 'height' : 'width';\n        defaultTotalDimension = getAdjustedTotalDimensions({totalDimension: Dimensions.get('window')[dimension], maxDimension, contentContainerStyle: restProps.contentContainerStyle, style, horizontal, adjustGridToStyles});\n      }\n\n      return defaultTotalDimension;\n    });\n\n    const onLayoutLocal = useCallback(\n      (e) => {\n        if (!staticDimension) {\n          const { width, height } = e.nativeEvent.layout || {};\n          let newTotalDimension = horizontal ? height : width;\n\n          newTotalDimension = getAdjustedTotalDimensions({totalDimension: newTotalDimension, maxDimension, contentContainerStyle: restProps.contentContainerStyle, style, horizontal, adjustGridToStyles});\n\n          if (totalDimension !== newTotalDimension && newTotalDimension > 0) {\n            setTotalDimension(newTotalDimension);\n          }\n        }\n\n        // call onLayout prop if passed\n        if (onLayout) {\n          onLayout(e);\n        }\n      },\n      [staticDimension, maxDimension, totalDimension, horizontal, onLayout, adjustGridToStyles],\n    );\n\n    const renderRow = useCallback(\n      ({\n        rowItems,\n        rowIndex,\n        separators,\n        isLastRow,\n        itemsPerRow,\n        rowStyle,\n        containerStyle,\n      }) => {\n        // To make up for the top padding\n        let additionalRowStyle = {};\n        if (isLastRow) {\n          additionalRowStyle = {\n            ...(!horizontal ? { marginBottom: spacing } : {}),\n            ...(horizontal ? { marginRight: spacing } : {}),\n          };\n        }\n\n        return (\n          <View style={[rowStyle, additionalRowStyle, externalRowStyle]}>\n            {rowItems.map((item, index) => {\n              const i = invertedRow ? -index + itemsPerRow - 1 : index;\n\n              return (\n                <View\n                  key={\n                    keyExtractor\n                      ? keyExtractor(item, rowIndex * itemsPerRow + i)\n                      : `item_${rowIndex * itemsPerRow + i}`\n                  }\n                  style={[containerStyle, itemContainerStyle]}\n                >\n                  {renderItem({\n                    item,\n                    index: rowIndex * itemsPerRow + i,\n                    separators,\n                    rowIndex,\n                  })}\n                </View>\n              );\n            })}\n          </View>\n        );\n      },\n      [renderItem, spacing, keyExtractor, externalRowStyle, itemContainerStyle, horizontal, invertedRow],\n    );\n\n    const { containerDimension, itemsPerRow, fixedSpacing } = useMemo(\n      () => calculateDimensions({\n        itemDimension,\n        staticDimension,\n        totalDimension,\n        spacing,\n        fixed,\n        maxItemsPerRow,\n      }),\n      [itemDimension, staticDimension, totalDimension, spacing, fixed, maxItemsPerRow],\n    );\n\n    const { containerStyle, rowStyle } = useMemo(\n      () => generateStyles({\n        horizontal,\n        itemDimension,\n        containerDimension,\n        spacing,\n        fixedSpacing,\n        fixed,\n      }),\n      [horizontal, itemDimension, containerDimension, spacing, fixedSpacing, fixed],\n    );\n\n    let rows = chunkArray(data, itemsPerRow); // Splitting the data into rows\n    if (invertedRow) {\n      rows = rows.map(r => r.reverse());\n    }\n\n    const localKeyExtractor = useCallback(\n      (rowItems, index) => {\n        if (keyExtractor) {\n          return rowItems\n            .map((rowItem, rowItemIndex) => keyExtractor(rowItem, rowItemIndex))\n            .join('_');\n        }\n        return `row_${index}`;\n      },\n      [keyExtractor],\n    );\n\n\n    return (\n      <FlatListComponent\n        data={rows}\n        ref={ref}\n        extraData={totalDimension}\n        renderItem={({ item, index }) => renderRow({\n          rowItems: item,\n          rowIndex: index,\n          isLastRow: index === rows.length - 1,\n          itemsPerRow,\n          rowStyle,\n          containerStyle,\n        })\n        }\n        style={[\n          {\n            ...(horizontal\n              ? { paddingLeft: spacing }\n              : { paddingTop: spacing }),\n          },\n          style,\n        ]}\n        onLayout={onLayoutLocal}\n        keyExtractor={localKeyExtractor}\n        {...restProps}\n        horizontal={horizontal}\n      />\n    );\n  }),\n);\n\n\nFlatGrid.displayName = 'FlatGrid';\n\nFlatGrid.propTypes = {\n  renderItem: PropTypes.func.isRequired,\n  data: PropTypes.arrayOf(PropTypes.any).isRequired,\n  itemDimension: PropTypes.number,\n  maxDimension: PropTypes.number,\n  fixed: PropTypes.bool,\n  spacing: PropTypes.number,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  additionalRowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  itemContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  staticDimension: PropTypes.number,\n  horizontal: PropTypes.bool,\n  onLayout: PropTypes.func,\n  keyExtractor: PropTypes.func,\n  listKey: PropTypes.string,\n  invertedRow: PropTypes.bool,\n  maxItemsPerRow: PropTypes.number,\n  adjustGridToStyles: PropTypes.bool,\n  customFlatList: PropTypes.elementType\n};\n\nFlatGrid.defaultProps = {\n  fixed: false,\n  itemDimension: 120,\n  spacing: 10,\n  style: {},\n  additionalRowStyle: undefined,\n  itemContainerStyle: undefined,\n  staticDimension: undefined,\n  horizontal: false,\n  onLayout: null,\n  keyExtractor: null,\n  listKey: undefined,\n  maxDimension: undefined,\n  invertedRow: false,\n  maxItemsPerRow: undefined,\n  adjustGridToStyles: false,\n  customFlatList: undefined\n};\n\n\nexport default FlatGrid;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport { FlatGrid } from 'react-native-super-grid';\nimport products from \"../assets/data/produtos\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar CuponModal = function CuponModal() {\n  var _useState = useState(products),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalVisible = _useState4[0],\n      setModalVisible = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      secondModalVisible = _useState6[0],\n      setSecondModalVisible = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedItems = _useState8[0],\n      setSelectedItems = _useState8[1];\n\n  var updateQuantity = function updateQuantity(index, operator) {\n    var novosItens = _toConsumableArray(selectedItems);\n\n    if (operator === 'add') {\n      novosItens[index].quantity++;\n    }\n\n    if (operator === 'subtract') {\n      if (novosItens[index].quantity == 0) return;\n      novosItens[index].quantity--;\n    }\n\n    setSelectedItems(novosItens);\n  };\n\n  var toggleSelect = function toggleSelect(item) {\n    if (item.selected) {\n      setSelectedItems(function (res) {\n        return res.filter(function (e) {\n          return e.id !== item.id;\n        });\n      });\n    } else {\n      setSelectedItems(function (res) {\n        return [].concat(_toConsumableArray(res), [item]);\n      });\n    }\n\n    var newArrData = selected.map(function (e) {\n      if (e.id == item.id) {\n        return _objectSpread(_objectSpread({}, e), {}, {\n          selected: !e.selected\n        });\n      } else {\n        return e;\n      }\n    });\n    console.log(\"Length \" + selectedItems.length);\n    setSelected(newArrData);\n  };\n\n  var modalForward = function modalForward() {\n    setModalVisible(false);\n    setSecondModalVisible(true);\n  };\n\n  var modalBack = function modalBack() {\n    setModalVisible(true);\n    setSecondModalVisible(false);\n  };\n\n  var criarCupom = function criarCupom() {\n    setSecondModalVisible(false);\n    setSelectedItems([]);\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      children: _jsx(View, {\n        style: styles.centeredViewInner,\n        children: _jsxs(View, {\n          style: styles.list,\n          children: [_jsx(FlatGrid, {\n            itemDimension: 50,\n            spacing: 20,\n            data: selected,\n            renderItem: function renderItem(itemData) {\n              return _jsx(Pressable, {\n                onPress: function onPress() {\n                  return toggleSelect(itemData.item);\n                },\n                children: _jsxs(View, {\n                  style: {\n                    flex: 2,\n                    justifyContent: 'center',\n                    padding: 10,\n                    backgroundColor: itemData.item.selected ? '#66BB6A' : '#f5f5f5',\n                    borderRadius: itemData.item.selected ? 5 : 0,\n                    maxWidth: 500\n                  },\n                  children: [_jsx(Image, {\n                    source: {\n                      uri: itemData.item.icon\n                    },\n                    style: styles.image\n                  }), _jsx(Text, {\n                    style: styles.listText,\n                    children: itemData.item.price\n                  })]\n                })\n              });\n            },\n            keyExtractor: function keyExtractor(item, index) {\n              return item.id;\n            }\n          }), _jsxs(View, {\n            style: styles.buttonContainer,\n            children: [_jsx(Pressable, {\n              style: [styles.button, styles.buttonClose, {\n                marginRight: 20,\n                backgroundColor: '#757575'\n              }],\n              onPress: function onPress() {\n                return setModalVisible(!modalVisible);\n              },\n              children: _jsx(Text, {\n                style: styles.textStyle,\n                children: \"Cancelar\"\n              })\n            }), _jsx(Pressable, {\n              style: {\n                padding: 10,\n                backgroundColor: '#43A047',\n                borderRadius: 5,\n                width: 150\n              },\n              onPress: function onPress() {\n                return modalForward();\n              },\n              children: _jsx(Text, {\n                style: {\n                  color: '#f5f5f5',\n                  textAlign: 'center'\n                },\n                children: \"Pr\\xF3ximo\"\n              })\n            })]\n          })]\n        })\n      })\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: secondModalVisible,\n      children: _jsxs(View, {\n        style: styles.centeredViewInner,\n        children: [_jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            borderWidth: 1,\n            borderColor: '#f5f5f5',\n            borderTopStartRadius: 5,\n            borderTopEndRadius: 5,\n            borderBottomColor: '#cccccc'\n          },\n          children: [_jsx(View, {\n            style: {\n              padding: 10\n            },\n            children: _jsx(Text, {\n              style: {\n                fontSize: 20,\n                color: '#616161'\n              },\n              children: \"UniCaf\\xE9\"\n            })\n          }), _jsxs(View, {\n            style: {\n              padding: 10,\n              flexDirection: 'column'\n            },\n            children: [_jsx(Text, {\n              style: {\n                color: '#757575'\n              },\n              children: \"Cafeteria\"\n            }), _jsx(Text, {\n              style: {\n                color: '#757575'\n              },\n              children: \"Bloco H - Piso 2\"\n            })]\n          }), _jsxs(View, {\n            style: {\n              padding: 10,\n              flexDirection: 'row',\n              marginTop: 10\n            },\n            children: [_jsx(Icon, {\n              name: \"horse-head\",\n              size: 20,\n              style: {\n                marginTop: 2,\n                marginLeft: 15,\n                marginRight: 5\n              }\n            }), _jsx(Text, {\n              style: {\n                fontSize: 20,\n                fontWeight: 'bold'\n              },\n              children: \"- 100\"\n            })]\n          })]\n        }), _jsxs(View, {\n          style: styles.list,\n          children: [_jsx(View, {\n            style: {\n              padding: 10\n            },\n            children: _jsx(Text, {\n              style: {\n                fontSize: 20,\n                fontWeight: 'bold'\n              },\n              children: \"Selecione os itens\"\n            })\n          }), _jsx(FlatList, {\n            style: {\n              maxHeight: 375\n            },\n            data: selectedItems,\n            renderItem: function renderItem(itemData) {\n              return _jsxs(View, {\n                style: styles.secondlistItem,\n                children: [_jsx(View, {\n                  style: styles.col1,\n                  children: _jsx(Image, {\n                    source: {\n                      uri: itemData.item.icon\n                    },\n                    style: styles.image\n                  })\n                }), _jsxs(View, {\n                  style: styles.col2,\n                  children: [_jsx(Text, {\n                    style: [styles.listText, {\n                      lineHeight: 20,\n                      fontWeight: 'bold'\n                    }],\n                    children: itemData.item.name\n                  }), _jsxs(Text, {\n                    style: [styles.listText, {\n                      lineHeight: 20,\n                      fontWeight: 'bold'\n                    }],\n                    children: [_jsx(Icon, {\n                      name: \"horse-head\",\n                      style: {\n                        marginRight: 10\n                      }\n                    }), ' ', itemData.item.price]\n                  })]\n                }), _jsxs(View, {\n                  style: styles.col3,\n                  children: [_jsx(Pressable, {\n                    onPress: function onPress() {\n                      updateQuantity(itemData.index, 'add');\n                    },\n                    children: _jsx(Icon, {\n                      name: \"plus\",\n                      style: styles.icons\n                    })\n                  }), _jsx(View, {\n                    style: {\n                      backgroundColor: '#BDBDBD',\n                      width: 50,\n                      padding: 10,\n                      borderRadius: 5,\n                      marginLeft: 5,\n                      marginRight: 5\n                    },\n                    children: _jsx(Text, {\n                      style: {\n                        textAlign: 'center'\n                      },\n                      children: itemData.item.quantity\n                    })\n                  }), _jsx(Pressable, {\n                    onPress: function onPress() {\n                      updateQuantity(itemData.index, 'subtract');\n                    },\n                    children: _jsx(Icon, {\n                      name: \"minus\",\n                      style: styles.icons\n                    })\n                  })]\n                })]\n              });\n            }\n          }), _jsxs(View, {\n            style: [styles.buttonContainer],\n            children: [_jsx(Pressable, {\n              style: [styles.button, {\n                backgroundColor: '#757575',\n                padding: 10,\n                marginRight: 30\n              }],\n              onPress: function onPress() {\n                return modalBack();\n              },\n              children: _jsx(Text, {\n                style: {\n                  color: '#f5f5f5',\n                  textAlign: 'center'\n                },\n                children: \"Cancelar\"\n              })\n            }), _jsx(Pressable, {\n              style: [styles.button, styles.buttonClose, {\n                backgroundColor: '#4CAF50'\n              }],\n              onPress: function onPress() {\n                return criarCupom();\n              },\n              children: _jsx(Text, {\n                style: styles.textStyle,\n                children: \"Criar cupom\"\n              })\n            })]\n          })]\n        })]\n      })\n    }), _jsx(Pressable, {\n      style: [styles.button, styles.buttonOpen],\n      onPress: function onPress() {\n        return setModalVisible(true);\n      },\n      children: _jsx(Text, {\n        style: styles.textStyle,\n        children: \"Criar Cupom\"\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n    marginTop: 20,\n    marginHorizontal: 10,\n    marginBottom: 5,\n    flexDirection: 'row'\n  },\n  centeredViewInner: {\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    borderRadius: 5,\n    backgroundColor: '#f5f5f5',\n    marginHorizontal: 10,\n    marginBottom: 5,\n    marginTop: 10,\n    padding: 10\n  },\n  modalView: {\n    backgroundColor: 'white',\n    borderRadius: 20,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n    borderWidth: 1,\n    borderColor: '#000000'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    padding: 20\n  },\n  button: {\n    borderRadius: 5,\n    height: 50,\n    width: 150,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: '#800020',\n    width: 120\n  },\n  buttonClose: {\n    backgroundColor: '#2196F3'\n  },\n  textStyle: {\n    color: 'white',\n    textAlign: 'center'\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: 'center'\n  },\n  image: {\n    minHeight: 40,\n    maxHeight: 50,\n    minWidth: 30,\n    maxWidth: 50,\n    borderRadius: 5\n  },\n  listItem: {\n    flex: 2,\n    justifyContent: 'center',\n    padding: 10\n  },\n  secondlistItem: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    padding: 10\n  },\n  list: {\n    padding: 5\n  },\n  col1: {\n    flex: 1\n  },\n  col2: {\n    flex: 2,\n    marginLeft: 20\n  },\n  col3: {\n    flex: 2,\n    padding: 5,\n    justifyContent: 'space-between',\n    height: 50,\n    flexDirection: 'row',\n    marginLeft: 10\n  },\n  input: {\n    flex: 1,\n    padding: 0,\n    height: 50,\n    fontSize: 40,\n    justifyContent: 'center'\n  },\n  icons: {\n    marginTop: 15\n  }\n});\nexport default CuponModal;","map":{"version":3,"names":["React","useEffect","useState","Icon","FlatGrid","products","CuponModal","selected","setSelected","modalVisible","setModalVisible","secondModalVisible","setSecondModalVisible","selectedItems","setSelectedItems","updateQuantity","index","operator","novosItens","quantity","toggleSelect","item","res","filter","e","id","newArrData","map","console","log","length","modalForward","modalBack","criarCupom","styles","centeredViewInner","list","itemData","flex","justifyContent","padding","backgroundColor","borderRadius","maxWidth","uri","icon","image","listText","price","buttonContainer","button","buttonClose","marginRight","textStyle","width","color","textAlign","flexDirection","borderWidth","borderColor","borderTopStartRadius","borderTopEndRadius","borderBottomColor","fontSize","marginTop","marginLeft","fontWeight","maxHeight","secondlistItem","col1","col2","lineHeight","name","col3","icons","buttonOpen","StyleSheet","create","centeredView","marginHorizontal","marginBottom","flexWrap","modalView","alignItems","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","modalText","minHeight","minWidth","listItem","input"],"sources":["/home/cesa/Github/UniCash-1/App/components/modal.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n    Alert,\n    Modal,\n    StyleSheet,\n    Text,\n    Pressable,\n    View,\n    Image,\n    FlatList,\n    TextInput,\n} from 'react-native'\nimport Icon from 'react-native-vector-icons/FontAwesome5'\nimport { FlatGrid } from 'react-native-super-grid'\nimport products from '../assets/data/produtos'\nconst CuponModal = () => {\n    const [selected, setSelected] = useState(products)\n    const [modalVisible, setModalVisible] = useState(false)\n    const [secondModalVisible, setSecondModalVisible] = useState(false)\n    const [selectedItems, setSelectedItems] = useState([])\n\n    const updateQuantity = (index, operator) => {\n        const novosItens = [...selectedItems]\n\n        if (operator === 'add') {\n            novosItens[index].quantity++\n        }\n        if (operator === 'subtract') {\n            if (novosItens[index].quantity == 0) return\n\n            novosItens[index].quantity--\n        }\n\n        setSelectedItems(novosItens)\n    }\n\n    const toggleSelect = (item) => {\n        if (item.selected) {\n            setSelectedItems((res) => res.filter((e) => e.id !== item.id))\n        } else {\n            setSelectedItems((res) => [...res, item])\n        }\n        const newArrData = selected.map((e) => {\n            if (e.id == item.id) {\n                return {\n                    ...e,\n                    selected: !e.selected,\n                }\n            } else {\n                return e\n            }\n        })\n        console.log(`Length ${selectedItems.length}`)\n        setSelected(newArrData)\n    }\n\n    const modalForward = () => {\n        setModalVisible(false)\n        setSecondModalVisible(true)\n    }\n\n    const modalBack = () => {\n        setModalVisible(true)\n        setSecondModalVisible(false)\n    }\n\n    const criarCupom = () => {\n        setSecondModalVisible(false)\n        setSelectedItems([])\n    }\n\n    return (\n        <>\n            <Modal\n                animationType=\"slide\"\n                transparent={true}\n                visible={modalVisible}\n            >\n                <View style={styles.centeredViewInner}>\n                    <View style={styles.list}>\n                        <FlatGrid\n                            itemDimension={50}\n                            spacing={20}\n                            data={selected}\n                            renderItem={(itemData) => {\n                                return (\n                                    <Pressable\n                                        onPress={() =>\n                                            toggleSelect(itemData.item)\n                                        }\n                                    >\n                                        <View\n                                            style={{\n                                                flex: 2,\n                                                justifyContent: 'center',\n                                                padding: 10,\n                                                backgroundColor: itemData.item\n                                                    .selected\n                                                    ? '#66BB6A'\n                                                    : '#f5f5f5',\n                                                borderRadius: itemData.item\n                                                    .selected\n                                                    ? 5\n                                                    : 0,\n                                                maxWidth: 500,\n                                            }}\n                                        >\n                                            <Image\n                                                source={{\n                                                    uri: itemData.item.icon,\n                                                }}\n                                                style={styles.image}\n                                            />\n                                            <Text style={styles.listText}>\n                                                {itemData.item.price}\n                                            </Text>\n                                        </View>\n                                    </Pressable>\n                                )\n                            }}\n                            keyExtractor={(item, index) => {\n                                return item.id\n                            }}\n                        />\n                        <View style={styles.buttonContainer}>\n                            <Pressable\n                                style={[\n                                    styles.button,\n                                    styles.buttonClose,\n                                    {\n                                        marginRight: 20,\n                                        backgroundColor: '#757575',\n                                    },\n                                ]}\n                                onPress={() => setModalVisible(!modalVisible)}\n                            >\n                                <Text style={styles.textStyle}>Cancelar</Text>\n                            </Pressable>\n                            <Pressable\n                                style={{\n                                    padding: 10,\n                                    backgroundColor: '#43A047',\n                                    borderRadius: 5,\n                                    width: 150,\n                                }}\n                                onPress={() => modalForward()}\n                            >\n                                <Text\n                                    style={{\n                                        color: '#f5f5f5',\n                                        textAlign: 'center',\n                                    }}\n                                >\n                                    Próximo\n                                </Text>\n                            </Pressable>\n                        </View>\n                    </View>\n                </View>\n            </Modal>\n            <Modal\n                animationType=\"slide\"\n                transparent={true}\n                visible={secondModalVisible}\n            >\n                <View style={styles.centeredViewInner}>\n                    <View\n                        style={{\n                            flexDirection: 'row',\n                            borderWidth: 1,\n                            borderColor: '#f5f5f5',\n                            borderTopStartRadius: 5,\n                            borderTopEndRadius: 5,\n                            borderBottomColor: '#cccccc',\n                        }}\n                    >\n                        {/* Nome da loja */}\n                        <View style={{ padding: 10 }}>\n                            <Text style={{ fontSize: 20, color: '#616161' }}>\n                                UniCafé\n                            </Text>\n                        </View>\n                        {/* Classificação & Localização */}\n                        <View style={{ padding: 10, flexDirection: 'column' }}>\n                            <Text style={{ color: '#757575' }}>Cafeteria</Text>\n                            <Text style={{ color: '#757575' }}>\n                                Bloco H - Piso 2\n                            </Text>\n                        </View>\n                        {/* Valor total do cupom */}\n                        <View\n                            style={{\n                                padding: 10,\n                                flexDirection: 'row',\n                                marginTop: 10,\n                            }}\n                        >\n                            <Icon\n                                name=\"horse-head\"\n                                size={20}\n                                style={{\n                                    marginTop: 2,\n                                    marginLeft: 15,\n                                    marginRight: 5,\n                                }}\n                            />\n                            <Text style={{ fontSize: 20, fontWeight: 'bold' }}>\n                                - 100\n                            </Text>\n                        </View>\n                    </View>\n                    <View style={styles.list}>\n                        <View style={{ padding: 10 }}>\n                            <Text style={{ fontSize: 20, fontWeight: 'bold' }}>\n                                Selecione os itens\n                            </Text>\n                        </View>\n\n                        <FlatList\n                            style={{ maxHeight: 375 }}\n                            data={selectedItems}\n                            renderItem={(itemData) => {\n                                return (\n                                    <View style={styles.secondlistItem}>\n                                        <View style={styles.col1}>\n                                            <Image\n                                                source={{\n                                                    uri: itemData.item.icon,\n                                                }}\n                                                style={styles.image}\n                                            />\n                                        </View>\n                                        <View style={styles.col2}>\n                                            <Text\n                                                style={[\n                                                    styles.listText,\n                                                    {\n                                                        lineHeight: 20,\n                                                        fontWeight: 'bold',\n                                                    },\n                                                ]}\n                                            >\n                                                {itemData.item.name}\n                                            </Text>\n\n                                            <Text\n                                                style={[\n                                                    styles.listText,\n                                                    {\n                                                        lineHeight: 20,\n                                                        fontWeight: 'bold',\n                                                    },\n                                                ]}\n                                            >\n                                                <Icon\n                                                    name=\"horse-head\"\n                                                    style={{ marginRight: 10 }}\n                                                />{' '}\n                                                {itemData.item.price}\n                                            </Text>\n                                        </View>\n                                        <View style={styles.col3}>\n                                            <Pressable\n                                                onPress={() => {\n                                                    updateQuantity(\n                                                        itemData.index,\n                                                        'add'\n                                                    )\n                                                }}\n                                            >\n                                                <Icon\n                                                    name=\"plus\"\n                                                    style={styles.icons}\n                                                />\n                                            </Pressable>\n                                            <View\n                                                style={{\n                                                    backgroundColor: '#BDBDBD',\n                                                    width: 50,\n                                                    padding: 10,\n                                                    borderRadius: 5,\n                                                    marginLeft: 5,\n                                                    marginRight: 5,\n                                                }}\n                                            >\n                                                <Text\n                                                    style={{\n                                                        textAlign: 'center',\n                                                    }}\n                                                >\n                                                    {itemData.item.quantity}\n                                                </Text>\n                                            </View>\n                                            <Pressable\n                                                onPress={() => {\n                                                    updateQuantity(\n                                                        itemData.index,\n                                                        'subtract'\n                                                    )\n                                                }}\n                                            >\n                                                <Icon\n                                                    name=\"minus\"\n                                                    style={styles.icons}\n                                                />\n                                            </Pressable>\n                                        </View>\n                                    </View>\n                                )\n                            }}\n                        />\n                        <View style={[styles.buttonContainer]}>\n                            <Pressable\n                                style={[\n                                    styles.button,\n                                    {\n                                        backgroundColor: '#757575',\n                                        padding: 10,\n                                        marginRight: 30,\n                                    },\n                                ]}\n                                onPress={() => modalBack()}\n                            >\n                                <Text\n                                    style={{\n                                        color: '#f5f5f5',\n                                        textAlign: 'center',\n                                    }}\n                                >\n                                    Cancelar\n                                </Text>\n                            </Pressable>\n                            <Pressable\n                                style={[\n                                    styles.button,\n                                    styles.buttonClose,\n                                    { backgroundColor: '#4CAF50' },\n                                ]}\n                                onPress={() => criarCupom()}\n                            >\n                                <Text style={styles.textStyle}>\n                                    Criar cupom\n                                </Text>\n                            </Pressable>\n                        </View>\n                    </View>\n                </View>\n            </Modal>\n            <Pressable\n                style={[styles.button, styles.buttonOpen]}\n                onPress={() => setModalVisible(true)}\n            >\n                <Text style={styles.textStyle}>Criar Cupom</Text>\n            </Pressable>\n        </>\n    )\n}\n\nconst styles = StyleSheet.create({\n    centeredView: {\n        flex: 1,\n        backgroundColor: '#f5f5f5',\n        marginTop: 20,\n        marginHorizontal: 10,\n        marginBottom: 5,\n        flexDirection: 'row',\n    },\n    centeredViewInner: {\n        flex: 1,\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        borderRadius: 5,\n        backgroundColor: '#f5f5f5',\n        marginHorizontal: 10,\n        marginBottom: 5,\n        marginTop: 10,\n\n        padding: 10,\n    },\n    modalView: {\n        backgroundColor: 'white',\n        borderRadius: 20,\n        alignItems: 'center',\n        shadowColor: '#000',\n        shadowOffset: {\n            width: 0,\n            height: 2,\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5,\n        borderWidth: 1,\n        borderColor: '#000000',\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-evenly',\n        padding: 20,\n        //marginTop: 200,\n    },\n    button: {\n        borderRadius: 5,\n        height: 50,\n        width: 150,\n        padding: 10,\n        elevation: 2,\n    },\n    buttonOpen: {\n        backgroundColor: '#800020',\n        width: 120,\n    },\n    buttonClose: {\n        backgroundColor: '#2196F3',\n    },\n    textStyle: {\n        color: 'white',\n        textAlign: 'center',\n    },\n    modalText: {\n        marginBottom: 15,\n        textAlign: 'center',\n    },\n    image: {\n        minHeight: 40,\n        maxHeight: 50,\n        minWidth: 30,\n        maxWidth: 50,\n        borderRadius: 5,\n    },\n    listItem: {\n        flex: 2,\n        justifyContent: 'center',\n        padding: 10,\n    },\n    secondlistItem: {\n        //display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        padding: 10,\n    },\n    list: {\n        //flex: 1,\n        padding: 5,\n    },\n    col1: {\n        flex: 1,\n    },\n    col2: {\n        flex: 2,\n        marginLeft: 20,\n    },\n    col3: {\n        flex: 2,\n        padding: 5,\n        justifyContent: 'space-between',\n        height: 50,\n        // borderWidth: 1,\n        // borderColor: \"#000000\",\n        flexDirection: 'row',\n        marginLeft: 10,\n    },\n    input: {\n        flex: 1,\n        padding: 0,\n        height: 50,\n        // borderWidth: 1,\n        // borderColor: \"#000000\",\n        // borderRadius: 5,\n        fontSize: 40,\n        justifyContent: 'center',\n    },\n    icons: { marginTop: 15 },\n})\n\nexport default CuponModal\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
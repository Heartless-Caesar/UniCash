{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { React, useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SwitchSelector from \"react-native-switch-selector\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function Extrato(_ref) {\n  var navigation = _ref.navigation;\n  var rankingOpt = [{\n    label: \"Tudo\",\n    value: 0\n  }, {\n    label: \"Entrada\",\n    value: 1\n  }, {\n    label: \"Saída\",\n    value: 2\n  }];\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      seletor = _useState2[0],\n      setSeletor = _useState2[1];\n\n  var EXTRATO = [{\n    id: '1',\n    valor: 500.00,\n    data: '25/10/2022',\n    hora: '19:30',\n    tipo: 'resgate',\n    origem: {\n      nome: \"UniEvangélica\"\n    }\n  }, {\n    id: '2',\n    valor: -160.00,\n    data: '24/10/2022',\n    hora: '14:45',\n    tipo: 'envio',\n    destinatario: {\n      nome: \"José Algusto da Silva\",\n      curso: \"Eng. Civil\",\n      matricula: \"2020XXX\"\n    }\n  }, {\n    id: '3',\n    valor: 150.00,\n    data: '24/10/2022',\n    hora: '16:59',\n    tipo: 'recebido',\n    origem: {\n      nome: \"Allan Turing\",\n      curso: \"Eng. de Software\",\n      matricula: \"2020XXX\"\n    }\n  }, {\n    id: '4',\n    valor: -250.00,\n    data: '23/10/2022',\n    hora: '12:39',\n    tipo: 'pagamento',\n    destinatario: {\n      nome: \"Ultra Coffee UniEvangelica \",\n      local: \"UniEvangélica\"\n    }\n  }, {\n    id: '5',\n    valor: 250.00,\n    data: '23/10/2022',\n    hora: '17:30',\n    tipo: 'resgate',\n    origem: {\n      nome: \"UniEvangélica\"\n    }\n  }, {\n    id: '6',\n    valor: -450.00,\n    data: '22/10/2022',\n    hora: '12:22',\n    tipo: 'pagamento',\n    destinatario: {\n      nome: \"Ultra Coffee UniEvangelica \",\n      local: \"UniEvangélica\"\n    }\n  }, {\n    id: '7',\n    valor: 180.00,\n    data: '20/10/2022',\n    hora: '16:00',\n    tipo: 'recebido',\n    origem: {\n      nome: \"Antony Stark\",\n      curso: \"Eng. de Software\",\n      matricula: \"2020XXX\"\n    }\n  }, {\n    id: '8',\n    valor: 1350.00,\n    data: '24/10/2022',\n    hora: '23:45',\n    tipo: 'recebido',\n    origem: {\n      nome: \"Elvis\",\n      curso: \"Eng. de Software\",\n      matricula: \"1959XXX\"\n    }\n  }, {\n    id: '9',\n    valor: 2500.00,\n    data: '16/10/2022',\n    hora: '19:30',\n    tipo: 'resgate',\n    origem: {\n      nome: \"UniEvangélica\"\n    }\n  }, {\n    id: '10',\n    valor: -360.00,\n    data: '16/10/2022',\n    hora: '14:45',\n    tipo: 'envio',\n    destinatario: {\n      nome: \"José Algusto da Silva\",\n      curso: \"Eng. Civil\",\n      matricula: \"2020XXX\"\n    }\n  }];\n  return _jsx(View, {\n    children: _jsx(SafeAreaView, {\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(View, {\n          style: {\n            borderBottomColor: \"#FE3032\",\n            borderBottomWidth: 5\n          },\n          children: _jsx(SwitchSelector, {\n            height: 40,\n            buttonColor: \"#17A7E0\",\n            backgroundColor: \"#232D53\",\n            fontSize: 15,\n            bold: true,\n            borderRadius: 0,\n            textColor: \"#FFFFFF\",\n            initial: 0,\n            options: rankingOpt,\n            onPress: function onPress(seletor) {\n              return setSeletor(seletor);\n            }\n          })\n        }), seletor == 0 ? _jsx(FlatList, {\n          style: styles.FlatList,\n          data: EXTRATO,\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          },\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item;\n            return _jsx(View, {\n              style: styles.card,\n              children: item.tipo == \"resgate\" ? _jsxs(_Fragment, {\n                children: [_jsx(Image, {\n                  style: styles.iconeRP,\n                  source: require(\"../assets/Resgate.png\")\n                }), _jsxs(View, {\n                  style: styles.info,\n                  children: [_jsxs(Text, {\n                    style: styles.valor,\n                    children: [item.valor, \" UC\"]\n                  }), _jsx(Text, {\n                    style: styles.tipo,\n                    children: \"Resgate realizado\"\n                  }), _jsx(Text, {\n                    style: styles.origemDestino,\n                    children: item.origem.nome\n                  })]\n                }), _jsxs(View, {\n                  style: styles.TransferenciaData,\n                  children: [_jsx(Text, {\n                    style: styles.Data,\n                    children: item.data\n                  }), _jsx(Text, {\n                    style: styles.Data,\n                    children: item.hora\n                  })]\n                })]\n              }) : item.tipo == \"pagamento\" ? _jsxs(_Fragment, {\n                children: [_jsx(Image, {\n                  style: styles.iconeRP,\n                  source: require(\"../assets/Pagamento.png\")\n                }), _jsxs(View, {\n                  style: styles.info,\n                  children: [_jsxs(Text, {\n                    style: styles.valor,\n                    children: [item.valor, \" UC\"]\n                  }), _jsx(Text, {\n                    style: styles.tipo,\n                    children: \"Pagamaneto realizado\"\n                  }), _jsx(Text, {\n                    style: styles.origemDestino,\n                    children: item.destinatario.nome\n                  })]\n                }), _jsxs(View, {\n                  style: styles.TransferenciaData,\n                  children: [_jsx(Text, {\n                    style: styles.Data,\n                    children: item.data\n                  }), _jsx(Text, {\n                    style: styles.Data,\n                    children: item.hora\n                  })]\n                })]\n              }) : item.tipo == \"recebido\" ? _jsxs(_Fragment, {\n                children: [_jsx(Image, {\n                  style: styles.iconeES,\n                  source: require(\"../assets/Recebido.png\")\n                }), _jsxs(View, {\n                  style: styles.info,\n                  children: [_jsxs(Text, {\n                    style: styles.valor,\n                    children: [item.valor, \" UC\"]\n                  }), _jsx(Text, {\n                    style: styles.tipo,\n                    children: \"Transfer\\xEAncia recebida\"\n                  }), _jsxs(Text, {\n                    style: styles.origemDestino,\n                    children: [item.origem.nome, \" - \", item.origem.matricula]\n                  })]\n                }), _jsxs(View, {\n                  style: styles.TransferenciaData,\n                  children: [_jsx(Text, {\n                    style: styles.Data,\n                    children: item.data\n                  }), _jsx(Text, {\n                    style: styles.Data,\n                    children: item.hora\n                  })]\n                })]\n              }) : item.tipo == \"envio\" ? _jsxs(_Fragment, {\n                children: [_jsx(Image, {\n                  style: styles.iconeES,\n                  source: require(\"../assets/Envio.png\")\n                }), _jsxs(View, {\n                  style: styles.info,\n                  children: [_jsxs(Text, {\n                    style: styles.valor,\n                    children: [item.valor, \" UC\"]\n                  }), _jsx(Text, {\n                    style: styles.tipo,\n                    children: \"Transfer\\xEAncia realizada\"\n                  }), _jsx(Text, {\n                    style: styles.origemDestino,\n                    children: item.destinatario.nome\n                  })]\n                }), _jsxs(View, {\n                  style: styles.TransferenciaData,\n                  children: [_jsx(Text, {\n                    style: styles.Data,\n                    children: item.data\n                  }), _jsx(Text, {\n                    style: styles.Data,\n                    children: item.hora\n                  })]\n                })]\n              }) : _jsx(_Fragment, {})\n            });\n          }\n        }) : seletor == 1 ? _jsx(FlatList, {\n          style: styles.FlatList,\n          data: EXTRATO,\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          },\n          renderItem: function renderItem(_ref3) {\n            var item = _ref3.item;\n            return _jsx(View, {\n              style: styles.card,\n              children: item.tipo == \"resgate\" ? _jsxs(_Fragment, {\n                children: [_jsx(Image, {\n                  style: styles.iconeRP,\n                  source: require(\"../assets/Resgate.png\")\n                }), _jsxs(View, {\n                  style: styles.info,\n                  children: [_jsxs(Text, {\n                    style: styles.valor,\n                    children: [item.valor, \" UC\"]\n                  }), _jsx(Text, {\n                    style: styles.tipo,\n                    children: \"Resgate realizado\"\n                  }), _jsx(Text, {\n                    style: styles.origemDestino,\n                    children: item.origem.nome\n                  })]\n                }), _jsxs(View, {\n                  style: styles.TransferenciaData,\n                  children: [_jsx(Text, {\n                    style: styles.Data,\n                    children: item.data\n                  }), _jsx(Text, {\n                    style: styles.Data,\n                    children: item.hora\n                  })]\n                })]\n              }) : item.tipo == \"recebido\" ? _jsxs(_Fragment, {\n                children: [_jsx(Image, {\n                  style: styles.iconeES,\n                  source: require(\"../assets/Recebido.png\")\n                }), _jsxs(View, {\n                  style: styles.info,\n                  children: [_jsxs(Text, {\n                    style: styles.valor,\n                    children: [item.valor, \" UC\"]\n                  }), _jsx(Text, {\n                    style: styles.tipo,\n                    children: \"Transfer\\xEAncia recebida\"\n                  }), _jsxs(Text, {\n                    style: styles.origemDestino,\n                    children: [item.origem.nome, \" - \", item.origem.matricula]\n                  })]\n                }), _jsxs(View, {\n                  style: styles.TransferenciaData,\n                  children: [_jsx(Text, {\n                    style: styles.Data,\n                    children: item.data\n                  }), _jsx(Text, {\n                    style: styles.Data,\n                    children: item.hora\n                  })]\n                })]\n              }) : _jsx(_Fragment, {})\n            });\n          }\n        }) : seletor == 2 ? _jsx(FlatList, {\n          style: styles.FlatList,\n          data: EXTRATO,\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          },\n          renderItem: function renderItem(_ref4) {\n            var item = _ref4.item;\n            return _jsx(View, {\n              style: styles.card,\n              children: item.tipo == \"pagamento\" ? _jsxs(_Fragment, {\n                children: [_jsx(Image, {\n                  style: styles.iconeRP,\n                  source: require(\"../assets/Pagamento.png\")\n                }), _jsxs(View, {\n                  style: styles.info,\n                  children: [_jsxs(Text, {\n                    style: styles.valor,\n                    children: [item.valor, \" UC\"]\n                  }), _jsx(Text, {\n                    style: styles.tipo,\n                    children: \"Pagamaneto realizado\"\n                  }), _jsx(Text, {\n                    style: styles.origemDestino,\n                    children: item.destinatario.nome\n                  })]\n                }), _jsxs(View, {\n                  style: styles.TransferenciaData,\n                  children: [_jsx(Text, {\n                    style: styles.Data,\n                    children: item.data\n                  }), _jsx(Text, {\n                    style: styles.Data,\n                    children: item.hora\n                  })]\n                })]\n              }) : item.tipo == \"envio\" ? _jsxs(_Fragment, {\n                children: [_jsx(Image, {\n                  style: styles.iconeES,\n                  source: require(\"../assets/Envio.png\")\n                }), _jsxs(View, {\n                  style: styles.info,\n                  children: [_jsxs(Text, {\n                    style: styles.valor,\n                    children: [item.valor, \" UC\"]\n                  }), _jsx(Text, {\n                    style: styles.tipo,\n                    children: \"Transfer\\xEAncia realizada\"\n                  }), _jsx(Text, {\n                    style: styles.origemDestino,\n                    children: item.destinatario.nome\n                  })]\n                }), _jsxs(View, {\n                  style: styles.TransferenciaData,\n                  children: [_jsx(Text, {\n                    style: styles.Data,\n                    children: item.data\n                  }), _jsx(Text, {\n                    style: styles.Data,\n                    children: item.hora\n                  })]\n                })]\n              }) : _jsx(_Fragment, {})\n            });\n          }\n        }) : _jsx(_Fragment, {})]\n      })\n    })\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"D9D9D9\"\n  },\n  FlatList: {\n    marginBottom: 80\n  },\n  card: {\n    flexDirection: \"row\",\n    alignItems: \"flex-start\",\n    justifyContent: \"space-evenly\",\n    backgroundColor: \"#FFFFFF\"\n  },\n  iconeRP: {\n    margin: 10,\n    height: 25,\n    width: 20\n  },\n  iconeES: {\n    margin: 10,\n    height: 20,\n    width: 25\n  },\n  info: {\n    margin: 10,\n    width: 180\n  },\n  valor: {\n    fontSize: 18,\n    color: \"#484848\",\n    fontWeight: \"500\"\n  },\n  tipo: {\n    fontSize: 14,\n    color: \"#484848\",\n    fontWeight: \"500\"\n  },\n  origemSaida: {\n    fontSize: 14,\n    color: \"#7E7E7E\",\n    fontWeight: \"500\"\n  },\n  TransferenciaData: {\n    margin: 10,\n    flexDirection: \"column\",\n    alignItems: \"flex-end\",\n    justifyContent: \"center\"\n  },\n  Data: {\n    fontSize: 16,\n    color: \"#7E7E7E\",\n    fontWeight: \"500\"\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","SwitchSelector","Extrato","navigation","rankingOpt","label","value","seletor","setSeletor","EXTRATO","id","valor","data","hora","tipo","origem","nome","destinatario","curso","matricula","local","styles","container","borderBottomColor","borderBottomWidth","FlatList","item","card","iconeRP","require","info","origemDestino","TransferenciaData","Data","iconeES","StyleSheet","create","backgroundColor","marginBottom","flexDirection","alignItems","justifyContent","margin","height","width","fontSize","color","fontWeight","origemSaida"],"sources":["/home/cesa/Github/UniCash/App/Paginas/Extrato.js"],"sourcesContent":["import { React, useEffect, useState } from \"react\";\nimport {\n    StyleSheet,\n    SafeAreaView,\n    View,\n    ScrollView,\n    FlatList,\n    Text,\n    Image\n} from \"react-native\";\nimport SwitchSelector from \"react-native-switch-selector\";\n\nexport default function Extrato({ navigation }) {\n\n    const rankingOpt = [\n        { label: \"Tudo\", value: 0 },\n        { label: \"Entrada\", value: 1 },\n        { label: \"Saída\", value: 2 }\n    ]; //Seletor do ranking.\n\n    const [seletor, setSeletor] = useState(0);\n\n    //Dados de um Extrato Fake, para integrar a uma API real necessidade repetir\n    // um useEfect semelhante ão da tela Home.\n    const EXTRATO = [\n        {\n            id: '1',\n            valor: 500.00,\n            data: '25/10/2022',\n            hora: '19:30',\n            tipo: 'resgate',\n            origem: {\n                nome: \"UniEvangélica\",\n            },\n        },\n        {\n            id: '2',\n            valor: -160.00,\n            data: '24/10/2022',\n            hora: '14:45',\n            tipo: 'envio',\n            destinatario: {\n                nome: \"José Algusto da Silva\",\n                curso: \"Eng. Civil\",\n                matricula: \"2020XXX\"\n            },\n        },\n        {\n            id: '3',\n            valor: 150.00,\n            data: '24/10/2022',\n            hora: '16:59',\n            tipo: 'recebido',\n            origem: {\n                nome: \"Allan Turing\",\n                curso: \"Eng. de Software\",\n                matricula: \"2020XXX\"\n            },\n        },\n        {\n            id: '4',\n            valor: -250.00,\n            data: '23/10/2022',\n            hora: '12:39',\n            tipo: 'pagamento',\n            destinatario: {\n                nome: \"Ultra Coffee UniEvangelica \",\n                local: \"UniEvangélica\",\n            },\n        },\n        {\n            id: '5',\n            valor: 250.00,\n            data: '23/10/2022',\n            hora: '17:30',\n            tipo: 'resgate',\n            origem: {\n                nome: \"UniEvangélica\",\n            },\n        },\n        {\n            id: '6',\n            valor: -450.00,\n            data: '22/10/2022',\n            hora: '12:22',\n            tipo: 'pagamento',\n            destinatario: {\n                nome: \"Ultra Coffee UniEvangelica \",\n                local: \"UniEvangélica\",\n            },\n        },\n        {\n            id: '7',\n            valor: 180.00,\n            data: '20/10/2022',\n            hora: '16:00',\n            tipo: 'recebido',\n            origem: {\n                nome: \"Antony Stark\",\n                curso: \"Eng. de Software\",\n                matricula: \"2020XXX\"\n            },\n        },\n        {\n            id: '8',\n            valor: 1350.00,\n            data: '24/10/2022',\n            hora: '23:45',\n            tipo: 'recebido',\n            origem: {\n                nome: \"Elvis\",\n                curso: \"Eng. de Software\",\n                matricula: \"1959XXX\"\n            },\n        },\n        {\n            id: '9',\n            valor: 2500.00,\n            data: '16/10/2022',\n            hora: '19:30',\n            tipo: 'resgate',\n            origem: {\n                nome: \"UniEvangélica\",\n            },\n        },\n        {\n            id: '10',\n            valor: -360.00,\n            data: '16/10/2022',\n            hora: '14:45',\n            tipo: 'envio',\n            destinatario: {\n                nome: \"José Algusto da Silva\",\n                curso: \"Eng. Civil\",\n                matricula: \"2020XXX\"\n            },\n        },\n    ];\n    //Fim dados Fakes\n\n    //Dados da requisição.\n    // useEffect(() => {\n    //     fetch('https://fake-api-unicash.herokuapp.com/user')\n    //         .then(response => response.json())\n    //         .then((response) => {\n    //             setData(response);\n    //             console.log(response);\n    //         })\n    // }, []);\n\n    return (\n        <View>\n            <SafeAreaView>\n                <View\n                    style={styles.container}\n                >\n                    <View\n                        style={{\n                            borderBottomColor: \"#FE3032\",\n                            borderBottomWidth: 5,\n                        }}\n                    >\n                        <SwitchSelector\n                            height={40}\n                            buttonColor={\"#17A7E0\"}\n                            backgroundColor={\"#232D53\"}\n                            fontSize={15}\n                            bold={true}\n                            borderRadius={0}\n                            textColor={\"#FFFFFF\"}\n                            initial={0}\n                            options={rankingOpt}\n                            onPress={(seletor) => setSeletor(seletor)}\n                        />\n                    </View>\n\n                    {\n                        (seletor == 0) ? (\n                            <FlatList\n                                style={styles.FlatList}\n                                data={EXTRATO}\n                                keyExtractor={(item) => { return item.id }}\n                                renderItem={({ item }) => (\n                                    <View\n                                        style={styles.card}\n                                    >\n                                        {\n                                            (item.tipo == \"resgate\") ? (\n                                                <>\n                                                    <Image\n                                                        style={styles.iconeRP}\n                                                        source={require('../assets/Resgate.png')}\n                                                    />\n                                                    <View\n                                                        style={styles.info}\n                                                    >\n                                                        <Text\n                                                            style={styles.valor}\n                                                        >\n                                                            {item.valor} UC\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.tipo}\n                                                        >\n                                                            Resgate realizado\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.origemDestino}\n                                                        >\n                                                            {item.origem.nome}\n                                                        </Text>\n                                                    </View>\n                                                    <View\n                                                        style={styles.TransferenciaData}\n                                                    >\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.data}\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.hora}\n                                                        </Text>\n                                                    </View>\n                                                </>\n                                            ) : (item.tipo == \"pagamento\") ? (\n                                                <>\n                                                    <Image\n                                                        style={styles.iconeRP}\n                                                        source={require('../assets/Pagamento.png')}\n                                                    />\n                                                    <View\n                                                        style={styles.info}\n                                                    >\n                                                        <Text\n                                                            style={styles.valor}\n                                                        >\n                                                            {item.valor} UC\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.tipo}\n                                                        >\n                                                            Pagamaneto realizado\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.origemDestino}\n                                                        >\n                                                            {item.destinatario.nome}\n                                                        </Text>\n                                                    </View>\n                                                    <View\n                                                        style={styles.TransferenciaData}\n                                                    >\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.data}\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.hora}\n                                                        </Text>\n                                                    </View>\n                                                </>\n                                            ) : (item.tipo == \"recebido\") ? (\n                                                <>\n                                                    <Image\n                                                        style={styles.iconeES}\n                                                        source={require('../assets/Recebido.png')}\n                                                    />\n                                                    <View\n                                                        style={styles.info}\n                                                    >\n                                                        <Text\n                                                            style={styles.valor}\n                                                        >\n                                                            {item.valor} UC\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.tipo}\n                                                        >\n                                                            Transferência recebida\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.origemDestino}\n                                                        >\n                                                            {item.origem.nome} - {item.origem.matricula}\n                                                        </Text>\n                                                    </View>\n                                                    <View\n                                                        style={styles.TransferenciaData}\n                                                    >\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.data}\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.hora}\n                                                        </Text>\n                                                    </View>\n                                                </>\n                                            ) : (item.tipo == \"envio\") ? (\n                                                <>\n                                                    <Image\n                                                        style={styles.iconeES}\n                                                        source={require('../assets/Envio.png')}\n                                                    />\n                                                    <View\n                                                        style={styles.info}\n                                                    >\n                                                        <Text\n                                                            style={styles.valor}\n                                                        >\n                                                            {item.valor} UC\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.tipo}\n                                                        >\n                                                            Transferência realizada\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.origemDestino}\n                                                        >\n                                                            {item.destinatario.nome}\n                                                        </Text>\n                                                    </View>\n                                                    <View\n                                                        style={styles.TransferenciaData}\n                                                    >\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.data}\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.hora}\n                                                        </Text>\n                                                    </View>\n                                                </>\n                                            ) : <>\n                                            </>\n                                        }\n                                    </View>\n                                )}\n                            />\n                        ) : (seletor == 1) ? (\n                            <FlatList\n                                style={styles.FlatList}\n                                data={EXTRATO}\n                                keyExtractor={(item) => { return item.id }}\n                                renderItem={({ item }) => (\n                                    <View\n                                        style={styles.card}\n                                    >\n                                        {\n                                            (item.tipo == \"resgate\") ? (\n                                                <>\n                                                    <Image\n                                                        style={styles.iconeRP}\n                                                        source={require('../assets/Resgate.png')}\n                                                    />\n                                                    <View\n                                                        style={styles.info}\n                                                    >\n                                                        <Text\n                                                            style={styles.valor}\n                                                        >\n                                                            {item.valor} UC\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.tipo}\n                                                        >\n                                                            Resgate realizado\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.origemDestino}\n                                                        >\n                                                            {item.origem.nome}\n                                                        </Text>\n                                                    </View>\n                                                    <View\n                                                        style={styles.TransferenciaData}\n                                                    >\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.data}\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.hora}\n                                                        </Text>\n                                                    </View>\n                                                </>\n                                            ) : (item.tipo == \"recebido\") ? (\n                                                <>\n                                                    <Image\n                                                        style={styles.iconeES}\n                                                        source={require('../assets/Recebido.png')}\n                                                    />\n                                                    <View\n                                                        style={styles.info}\n                                                    >\n                                                        <Text\n                                                            style={styles.valor}\n                                                        >\n                                                            {item.valor} UC\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.tipo}\n                                                        >\n                                                            Transferência recebida\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.origemDestino}\n                                                        >\n                                                            {item.origem.nome} - {item.origem.matricula}\n                                                        </Text>\n                                                    </View>\n                                                    <View\n                                                        style={styles.TransferenciaData}\n                                                    >\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.data}\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.hora}\n                                                        </Text>\n                                                    </View>\n                                                </>\n                                            ) : <>\n                                            </>\n                                        }\n                                    </View>\n                                )}\n                            />\n                        ) : (seletor == 2) ? (\n                            <FlatList\n                                style={styles.FlatList}\n                                data={EXTRATO}\n                                keyExtractor={(item) => { return item.id }}\n                                renderItem={({ item }) => (\n                                    <View\n                                        style={styles.card}\n                                    >\n                                        {\n                                            (item.tipo == \"pagamento\") ? (\n                                                <>\n                                                    <Image\n                                                        style={styles.iconeRP}\n                                                        source={require('../assets/Pagamento.png')}\n                                                    />\n                                                    <View\n                                                        style={styles.info}\n                                                    >\n                                                        <Text\n                                                            style={styles.valor}\n                                                        >\n                                                            {item.valor} UC\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.tipo}\n                                                        >\n                                                            Pagamaneto realizado\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.origemDestino}\n                                                        >\n                                                            {item.destinatario.nome}\n                                                        </Text>\n                                                    </View>\n                                                    <View\n                                                        style={styles.TransferenciaData}\n                                                    >\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.data}\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.hora}\n                                                        </Text>\n                                                    </View>\n                                                </>\n                                            ) : (item.tipo == \"envio\") ? (\n                                                <>\n                                                    <Image\n                                                        style={styles.iconeES}\n                                                        source={require('../assets/Envio.png')}\n                                                    />\n                                                    <View\n                                                        style={styles.info}\n                                                    >\n                                                        <Text\n                                                            style={styles.valor}\n                                                        >\n                                                            {item.valor} UC\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.tipo}\n                                                        >\n                                                            Transferência realizada\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.origemDestino}\n                                                        >\n                                                            {item.destinatario.nome}\n                                                        </Text>\n                                                    </View>\n                                                    <View\n                                                        style={styles.TransferenciaData}\n                                                    >\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.data}\n                                                        </Text>\n                                                        <Text\n                                                            style={styles.Data}\n                                                        >\n                                                            {item.hora}\n                                                        </Text>\n                                                    </View>\n                                                </>\n                                            ) : <>\n                                            </>\n                                        }\n                                    </View>\n                                )}\n                            />\n                        ) : <>\n                        </>\n                    }\n\n                </View>\n            </SafeAreaView>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: \"D9D9D9\",\n    },\n    FlatList: {\n        // position: \"relative\"\n        marginBottom: 80,\n    },\n    card: {\n        flexDirection: \"row\",\n        alignItems: \"flex-start\",\n        justifyContent: \"space-evenly\",\n        backgroundColor: \"#FFFFFF\",\n        //borderRadius: 8\n    },\n    iconeRP: {\n        margin: 10,\n        height: 25,\n        width: 20\n    },\n    iconeES: {\n        margin: 10,\n        height: 20,\n        width: 25\n    },\n    info: {\n        margin: 10,\n        width: 180\n    },\n    // valorEntrada: {\n    //     fontSize: 18,\n    //     color: \"#17A7E0\",\n    //     fontWeight: \"500\",\n    // },\n    // tipoEntrada: {\n    //     fontSize: 14,\n    //     color: \"#17A7E0\",\n    //     fontWeight: \"500\",\n    // },\n    valor: {\n        fontSize: 18,\n        color: \"#484848\",\n        fontWeight: \"500\",\n    },\n    tipo: {\n        fontSize: 14,\n        color: \"#484848\",\n        fontWeight: \"500\",\n    },\n    origemSaida: {\n        fontSize: 14,\n        color: \"#7E7E7E\",\n        fontWeight: \"500\",\n    },\n    TransferenciaData: {\n        margin: 10,\n        //paddingVertical: 10,\n        flexDirection: \"column\",\n        alignItems: \"flex-end\",\n        justifyContent: \"center\"\n    },\n    Data: {\n        fontSize: 16,\n        color: \"#7E7E7E\",\n        fontWeight: \"500\",\n    },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}